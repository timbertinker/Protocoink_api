import { Signer } from 'ethers';
import type { Provider } from '@ethersproject/providers';
import type { RouterETH, RouterETHInterface } from '../RouterETH';
export declare class RouterETH__factory {
    static readonly abi: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_stargateEthVault";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "_stargateRouter";
            readonly type: "address";
        }, {
            readonly internalType: "uint16";
            readonly name: "_poolId";
            readonly type: "uint16";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "constructor";
    }, {
        readonly inputs: readonly [];
        readonly name: "addLiquidityETH";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "poolId";
        readonly outputs: readonly [{
            readonly internalType: "uint16";
            readonly name: "";
            readonly type: "uint16";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "stargateEthVault";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "stargateRouter";
        readonly outputs: readonly [{
            readonly internalType: "contract IStargateRouter";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint16";
            readonly name: "_dstChainId";
            readonly type: "uint16";
        }, {
            readonly internalType: "address payable";
            readonly name: "_refundAddress";
            readonly type: "address";
        }, {
            readonly internalType: "bytes";
            readonly name: "_toAddress";
            readonly type: "bytes";
        }, {
            readonly internalType: "uint256";
            readonly name: "_amountLD";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "_minAmountLD";
            readonly type: "uint256";
        }];
        readonly name: "swapETH";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly stateMutability: "payable";
        readonly type: "receive";
    }];
    static createInterface(): RouterETHInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): RouterETH;
}
