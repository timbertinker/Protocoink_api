import { Signer } from 'ethers';
import type { Provider } from '@ethersproject/providers';
import type { Router, RouterInterface } from '../Router';
export declare class Router__factory {
    static readonly abi: readonly [{
        readonly inputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "constructor";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "uint16";
            readonly name: "chainId";
            readonly type: "uint16";
        }, {
            readonly indexed: false;
            readonly internalType: "bytes";
            readonly name: "srcAddress";
            readonly type: "bytes";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "nonce";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "amountLD";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "bytes";
            readonly name: "payload";
            readonly type: "bytes";
        }, {
            readonly indexed: false;
            readonly internalType: "bytes";
            readonly name: "reason";
            readonly type: "bytes";
        }];
        readonly name: "CachedSwapSaved";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "previousOwner";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "newOwner";
            readonly type: "address";
        }];
        readonly name: "OwnershipTransferred";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "uint16";
            readonly name: "srcChainId";
            readonly type: "uint16";
        }, {
            readonly indexed: true;
            readonly internalType: "bytes";
            readonly name: "srcAddress";
            readonly type: "bytes";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "nonce";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "srcPoolId";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "dstPoolId";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "amountSD";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "mintAmountSD";
            readonly type: "uint256";
        }];
        readonly name: "RedeemLocalCallback";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "uint8";
            readonly name: "bridgeFunctionType";
            readonly type: "uint8";
        }, {
            readonly indexed: false;
            readonly internalType: "uint16";
            readonly name: "chainId";
            readonly type: "uint16";
        }, {
            readonly indexed: false;
            readonly internalType: "bytes";
            readonly name: "srcAddress";
            readonly type: "bytes";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "nonce";
            readonly type: "uint256";
        }];
        readonly name: "Revert";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "uint16";
            readonly name: "srcChainId";
            readonly type: "uint16";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "_srcPoolId";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "_dstPoolId";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "bytes";
            readonly name: "to";
            readonly type: "bytes";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "redeemAmountSD";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "mintAmountSD";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "nonce";
            readonly type: "uint256";
        }, {
            readonly indexed: true;
            readonly internalType: "bytes";
            readonly name: "srcAddress";
            readonly type: "bytes";
        }];
        readonly name: "RevertRedeemLocal";
        readonly type: "event";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "_poolId";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint16";
            readonly name: "_dstChainId";
            readonly type: "uint16";
        }, {
            readonly internalType: "uint256";
            readonly name: "_dstPoolId";
            readonly type: "uint256";
        }];
        readonly name: "activateChainPath";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "_poolId";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "_amountLD";
            readonly type: "uint256";
        }, {
            readonly internalType: "address";
            readonly name: "_to";
            readonly type: "address";
        }];
        readonly name: "addLiquidity";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "bridge";
        readonly outputs: readonly [{
            readonly internalType: "contract Bridge";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint16";
            readonly name: "";
            readonly type: "uint16";
        }, {
            readonly internalType: "bytes";
            readonly name: "";
            readonly type: "bytes";
        }, {
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly name: "cachedSwapLookup";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "token";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "amountLD";
            readonly type: "uint256";
        }, {
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly internalType: "bytes";
            readonly name: "payload";
            readonly type: "bytes";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "_poolId";
            readonly type: "uint256";
        }, {
            readonly internalType: "bool";
            readonly name: "_fullMode";
            readonly type: "bool";
        }];
        readonly name: "callDelta";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint16";
            readonly name: "_srcChainId";
            readonly type: "uint16";
        }, {
            readonly internalType: "bytes";
            readonly name: "_srcAddress";
            readonly type: "bytes";
        }, {
            readonly internalType: "uint256";
            readonly name: "_nonce";
            readonly type: "uint256";
        }];
        readonly name: "clearCachedSwap";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "_poolId";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint16";
            readonly name: "_dstChainId";
            readonly type: "uint16";
        }, {
            readonly internalType: "uint256";
            readonly name: "_dstPoolId";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "_weight";
            readonly type: "uint256";
        }];
        readonly name: "createChainPath";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "_poolId";
            readonly type: "uint256";
        }, {
            readonly internalType: "address";
            readonly name: "_token";
            readonly type: "address";
        }, {
            readonly internalType: "uint8";
            readonly name: "_sharedDecimals";
            readonly type: "uint8";
        }, {
            readonly internalType: "uint8";
            readonly name: "_localDecimals";
            readonly type: "uint8";
        }, {
            readonly internalType: "string";
            readonly name: "_name";
            readonly type: "string";
        }, {
            readonly internalType: "string";
            readonly name: "_symbol";
            readonly type: "string";
        }];
        readonly name: "createPool";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint16";
            readonly name: "_dstChainId";
            readonly type: "uint16";
        }, {
            readonly internalType: "uint256";
            readonly name: "_dstPoolId";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "_srcPoolId";
            readonly type: "uint256";
        }, {
            readonly components: readonly [{
                readonly internalType: "uint256";
                readonly name: "credits";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "idealBalance";
                readonly type: "uint256";
            }];
            readonly internalType: "struct Pool.CreditObj";
            readonly name: "_c";
            readonly type: "tuple";
        }];
        readonly name: "creditChainPath";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "factory";
        readonly outputs: readonly [{
            readonly internalType: "contract Factory";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint16";
            readonly name: "_srcPoolId";
            readonly type: "uint16";
        }, {
            readonly internalType: "uint256";
            readonly name: "_amountLP";
            readonly type: "uint256";
        }, {
            readonly internalType: "address";
            readonly name: "_to";
            readonly type: "address";
        }];
        readonly name: "instantRedeemLocal";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "amountSD";
            readonly type: "uint256";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "mintFeeOwner";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "owner";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "protocolFeeOwner";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint16";
            readonly name: "_dstChainId";
            readonly type: "uint16";
        }, {
            readonly internalType: "uint8";
            readonly name: "_functionType";
            readonly type: "uint8";
        }, {
            readonly internalType: "bytes";
            readonly name: "_toAddress";
            readonly type: "bytes";
        }, {
            readonly internalType: "bytes";
            readonly name: "_transferAndCallPayload";
            readonly type: "bytes";
        }, {
            readonly components: readonly [{
                readonly internalType: "uint256";
                readonly name: "dstGasForCall";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "dstNativeAmount";
                readonly type: "uint256";
            }, {
                readonly internalType: "bytes";
                readonly name: "dstNativeAddr";
                readonly type: "bytes";
            }];
            readonly internalType: "struct IStargateRouter.lzTxObj";
            readonly name: "_lzTxParams";
            readonly type: "tuple";
        }];
        readonly name: "quoteLayerZeroFee";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint16";
            readonly name: "_dstChainId";
            readonly type: "uint16";
        }, {
            readonly internalType: "uint256";
            readonly name: "_srcPoolId";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "_dstPoolId";
            readonly type: "uint256";
        }, {
            readonly internalType: "address payable";
            readonly name: "_refundAddress";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "_amountLP";
            readonly type: "uint256";
        }, {
            readonly internalType: "bytes";
            readonly name: "_to";
            readonly type: "bytes";
        }, {
            readonly components: readonly [{
                readonly internalType: "uint256";
                readonly name: "dstGasForCall";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "dstNativeAmount";
                readonly type: "uint256";
            }, {
                readonly internalType: "bytes";
                readonly name: "dstNativeAddr";
                readonly type: "bytes";
            }];
            readonly internalType: "struct IStargateRouter.lzTxObj";
            readonly name: "_lzTxParams";
            readonly type: "tuple";
        }];
        readonly name: "redeemLocal";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint16";
            readonly name: "_srcChainId";
            readonly type: "uint16";
        }, {
            readonly internalType: "bytes";
            readonly name: "_srcAddress";
            readonly type: "bytes";
        }, {
            readonly internalType: "uint256";
            readonly name: "_nonce";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "_srcPoolId";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "_dstPoolId";
            readonly type: "uint256";
        }, {
            readonly internalType: "address";
            readonly name: "_to";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "_amountSD";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "_mintAmountSD";
            readonly type: "uint256";
        }];
        readonly name: "redeemLocalCallback";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint16";
            readonly name: "_srcChainId";
            readonly type: "uint16";
        }, {
            readonly internalType: "bytes";
            readonly name: "_srcAddress";
            readonly type: "bytes";
        }, {
            readonly internalType: "uint256";
            readonly name: "_nonce";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "_srcPoolId";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "_dstPoolId";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "_amountSD";
            readonly type: "uint256";
        }, {
            readonly internalType: "bytes";
            readonly name: "_to";
            readonly type: "bytes";
        }];
        readonly name: "redeemLocalCheckOnRemote";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint16";
            readonly name: "_dstChainId";
            readonly type: "uint16";
        }, {
            readonly internalType: "uint256";
            readonly name: "_srcPoolId";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "_dstPoolId";
            readonly type: "uint256";
        }, {
            readonly internalType: "address payable";
            readonly name: "_refundAddress";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "_amountLP";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "_minAmountLD";
            readonly type: "uint256";
        }, {
            readonly internalType: "bytes";
            readonly name: "_to";
            readonly type: "bytes";
        }, {
            readonly components: readonly [{
                readonly internalType: "uint256";
                readonly name: "dstGasForCall";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "dstNativeAmount";
                readonly type: "uint256";
            }, {
                readonly internalType: "bytes";
                readonly name: "dstNativeAddr";
                readonly type: "bytes";
            }];
            readonly internalType: "struct IStargateRouter.lzTxObj";
            readonly name: "_lzTxParams";
            readonly type: "tuple";
        }];
        readonly name: "redeemRemote";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "renounceOwnership";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint16";
            readonly name: "_srcChainId";
            readonly type: "uint16";
        }, {
            readonly internalType: "bytes";
            readonly name: "_srcAddress";
            readonly type: "bytes";
        }, {
            readonly internalType: "uint256";
            readonly name: "_nonce";
            readonly type: "uint256";
        }];
        readonly name: "retryRevert";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint16";
            readonly name: "";
            readonly type: "uint16";
        }, {
            readonly internalType: "bytes";
            readonly name: "";
            readonly type: "bytes";
        }, {
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly name: "revertLookup";
        readonly outputs: readonly [{
            readonly internalType: "bytes";
            readonly name: "";
            readonly type: "bytes";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint16";
            readonly name: "_dstChainId";
            readonly type: "uint16";
        }, {
            readonly internalType: "bytes";
            readonly name: "_srcAddress";
            readonly type: "bytes";
        }, {
            readonly internalType: "uint256";
            readonly name: "_nonce";
            readonly type: "uint256";
        }, {
            readonly internalType: "address payable";
            readonly name: "_refundAddress";
            readonly type: "address";
        }, {
            readonly components: readonly [{
                readonly internalType: "uint256";
                readonly name: "dstGasForCall";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "dstNativeAmount";
                readonly type: "uint256";
            }, {
                readonly internalType: "bytes";
                readonly name: "dstNativeAddr";
                readonly type: "bytes";
            }];
            readonly internalType: "struct IStargateRouter.lzTxObj";
            readonly name: "_lzTxParams";
            readonly type: "tuple";
        }];
        readonly name: "revertRedeemLocal";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint16";
            readonly name: "_dstChainId";
            readonly type: "uint16";
        }, {
            readonly internalType: "uint256";
            readonly name: "_srcPoolId";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "_dstPoolId";
            readonly type: "uint256";
        }, {
            readonly internalType: "address payable";
            readonly name: "_refundAddress";
            readonly type: "address";
        }];
        readonly name: "sendCredits";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "contract Bridge";
            readonly name: "_bridge";
            readonly type: "address";
        }, {
            readonly internalType: "contract Factory";
            readonly name: "_factory";
            readonly type: "address";
        }];
        readonly name: "setBridgeAndFactory";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "_poolId";
            readonly type: "uint256";
        }, {
            readonly internalType: "bool";
            readonly name: "_batched";
            readonly type: "bool";
        }, {
            readonly internalType: "uint256";
            readonly name: "_swapDeltaBP";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "_lpDeltaBP";
            readonly type: "uint256";
        }, {
            readonly internalType: "bool";
            readonly name: "_defaultSwapMode";
            readonly type: "bool";
        }, {
            readonly internalType: "bool";
            readonly name: "_defaultLPMode";
            readonly type: "bool";
        }];
        readonly name: "setDeltaParam";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "_poolId";
            readonly type: "uint256";
        }, {
            readonly internalType: "address";
            readonly name: "_feeLibraryAddr";
            readonly type: "address";
        }];
        readonly name: "setFeeLibrary";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "_poolId";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "_mintFeeBP";
            readonly type: "uint256";
        }];
        readonly name: "setFees";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_owner";
            readonly type: "address";
        }];
        readonly name: "setMintFeeOwner";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_owner";
            readonly type: "address";
        }];
        readonly name: "setProtocolFeeOwner";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "_poolId";
            readonly type: "uint256";
        }, {
            readonly internalType: "bool";
            readonly name: "_swapStop";
            readonly type: "bool";
        }];
        readonly name: "setSwapStop";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "_poolId";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint16";
            readonly name: "_dstChainId";
            readonly type: "uint16";
        }, {
            readonly internalType: "uint256";
            readonly name: "_dstPoolId";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint16";
            readonly name: "_weight";
            readonly type: "uint16";
        }];
        readonly name: "setWeightForChainPath";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint16";
            readonly name: "_dstChainId";
            readonly type: "uint16";
        }, {
            readonly internalType: "uint256";
            readonly name: "_srcPoolId";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "_dstPoolId";
            readonly type: "uint256";
        }, {
            readonly internalType: "address payable";
            readonly name: "_refundAddress";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "_amountLD";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "_minAmountLD";
            readonly type: "uint256";
        }, {
            readonly components: readonly [{
                readonly internalType: "uint256";
                readonly name: "dstGasForCall";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "dstNativeAmount";
                readonly type: "uint256";
            }, {
                readonly internalType: "bytes";
                readonly name: "dstNativeAddr";
                readonly type: "bytes";
            }];
            readonly internalType: "struct IStargateRouter.lzTxObj";
            readonly name: "_lzTxParams";
            readonly type: "tuple";
        }, {
            readonly internalType: "bytes";
            readonly name: "_to";
            readonly type: "bytes";
        }, {
            readonly internalType: "bytes";
            readonly name: "_payload";
            readonly type: "bytes";
        }];
        readonly name: "swap";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint16";
            readonly name: "_srcChainId";
            readonly type: "uint16";
        }, {
            readonly internalType: "bytes";
            readonly name: "_srcAddress";
            readonly type: "bytes";
        }, {
            readonly internalType: "uint256";
            readonly name: "_nonce";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "_srcPoolId";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "_dstPoolId";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "_dstGasForCall";
            readonly type: "uint256";
        }, {
            readonly internalType: "address";
            readonly name: "_to";
            readonly type: "address";
        }, {
            readonly components: readonly [{
                readonly internalType: "uint256";
                readonly name: "amount";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "eqFee";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "eqReward";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "lpFee";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "protocolFee";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "lkbRemove";
                readonly type: "uint256";
            }];
            readonly internalType: "struct Pool.SwapObj";
            readonly name: "_s";
            readonly type: "tuple";
        }, {
            readonly internalType: "bytes";
            readonly name: "_payload";
            readonly type: "bytes";
        }];
        readonly name: "swapRemote";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "newOwner";
            readonly type: "address";
        }];
        readonly name: "transferOwnership";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "_poolId";
            readonly type: "uint256";
        }, {
            readonly internalType: "address";
            readonly name: "_to";
            readonly type: "address";
        }];
        readonly name: "withdrawMintFee";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "_poolId";
            readonly type: "uint256";
        }, {
            readonly internalType: "address";
            readonly name: "_to";
            readonly type: "address";
        }];
        readonly name: "withdrawProtocolFee";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }];
    static createInterface(): RouterInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): Router;
}
