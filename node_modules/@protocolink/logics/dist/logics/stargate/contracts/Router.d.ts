import type { BaseContract, BigNumber, BigNumberish, BytesLike, CallOverrides, ContractTransaction, Overrides, PayableOverrides, PopulatedTransaction, Signer, utils } from 'ethers';
import type { FunctionFragment, Result, EventFragment } from '@ethersproject/abi';
import type { Listener, Provider } from '@ethersproject/providers';
import type { TypedEventFilter, TypedEvent, TypedListener, OnEvent } from './common';
export declare namespace Pool {
    type CreditObjStruct = {
        credits: BigNumberish;
        idealBalance: BigNumberish;
    };
    type CreditObjStructOutput = [BigNumber, BigNumber] & {
        credits: BigNumber;
        idealBalance: BigNumber;
    };
    type SwapObjStruct = {
        amount: BigNumberish;
        eqFee: BigNumberish;
        eqReward: BigNumberish;
        lpFee: BigNumberish;
        protocolFee: BigNumberish;
        lkbRemove: BigNumberish;
    };
    type SwapObjStructOutput = [BigNumber, BigNumber, BigNumber, BigNumber, BigNumber, BigNumber] & {
        amount: BigNumber;
        eqFee: BigNumber;
        eqReward: BigNumber;
        lpFee: BigNumber;
        protocolFee: BigNumber;
        lkbRemove: BigNumber;
    };
}
export declare namespace IStargateRouter {
    type LzTxObjStruct = {
        dstGasForCall: BigNumberish;
        dstNativeAmount: BigNumberish;
        dstNativeAddr: BytesLike;
    };
    type LzTxObjStructOutput = [BigNumber, BigNumber, string] & {
        dstGasForCall: BigNumber;
        dstNativeAmount: BigNumber;
        dstNativeAddr: string;
    };
}
export interface RouterInterface extends utils.Interface {
    functions: {
        'activateChainPath(uint256,uint16,uint256)': FunctionFragment;
        'addLiquidity(uint256,uint256,address)': FunctionFragment;
        'bridge()': FunctionFragment;
        'cachedSwapLookup(uint16,bytes,uint256)': FunctionFragment;
        'callDelta(uint256,bool)': FunctionFragment;
        'clearCachedSwap(uint16,bytes,uint256)': FunctionFragment;
        'createChainPath(uint256,uint16,uint256,uint256)': FunctionFragment;
        'createPool(uint256,address,uint8,uint8,string,string)': FunctionFragment;
        'creditChainPath(uint16,uint256,uint256,(uint256,uint256))': FunctionFragment;
        'factory()': FunctionFragment;
        'instantRedeemLocal(uint16,uint256,address)': FunctionFragment;
        'mintFeeOwner()': FunctionFragment;
        'owner()': FunctionFragment;
        'protocolFeeOwner()': FunctionFragment;
        'quoteLayerZeroFee(uint16,uint8,bytes,bytes,(uint256,uint256,bytes))': FunctionFragment;
        'redeemLocal(uint16,uint256,uint256,address,uint256,bytes,(uint256,uint256,bytes))': FunctionFragment;
        'redeemLocalCallback(uint16,bytes,uint256,uint256,uint256,address,uint256,uint256)': FunctionFragment;
        'redeemLocalCheckOnRemote(uint16,bytes,uint256,uint256,uint256,uint256,bytes)': FunctionFragment;
        'redeemRemote(uint16,uint256,uint256,address,uint256,uint256,bytes,(uint256,uint256,bytes))': FunctionFragment;
        'renounceOwnership()': FunctionFragment;
        'retryRevert(uint16,bytes,uint256)': FunctionFragment;
        'revertLookup(uint16,bytes,uint256)': FunctionFragment;
        'revertRedeemLocal(uint16,bytes,uint256,address,(uint256,uint256,bytes))': FunctionFragment;
        'sendCredits(uint16,uint256,uint256,address)': FunctionFragment;
        'setBridgeAndFactory(address,address)': FunctionFragment;
        'setDeltaParam(uint256,bool,uint256,uint256,bool,bool)': FunctionFragment;
        'setFeeLibrary(uint256,address)': FunctionFragment;
        'setFees(uint256,uint256)': FunctionFragment;
        'setMintFeeOwner(address)': FunctionFragment;
        'setProtocolFeeOwner(address)': FunctionFragment;
        'setSwapStop(uint256,bool)': FunctionFragment;
        'setWeightForChainPath(uint256,uint16,uint256,uint16)': FunctionFragment;
        'swap(uint16,uint256,uint256,address,uint256,uint256,(uint256,uint256,bytes),bytes,bytes)': FunctionFragment;
        'swapRemote(uint16,bytes,uint256,uint256,uint256,uint256,address,(uint256,uint256,uint256,uint256,uint256,uint256),bytes)': FunctionFragment;
        'transferOwnership(address)': FunctionFragment;
        'withdrawMintFee(uint256,address)': FunctionFragment;
        'withdrawProtocolFee(uint256,address)': FunctionFragment;
    };
    getFunction(nameOrSignatureOrTopic: 'activateChainPath' | 'addLiquidity' | 'bridge' | 'cachedSwapLookup' | 'callDelta' | 'clearCachedSwap' | 'createChainPath' | 'createPool' | 'creditChainPath' | 'factory' | 'instantRedeemLocal' | 'mintFeeOwner' | 'owner' | 'protocolFeeOwner' | 'quoteLayerZeroFee' | 'redeemLocal' | 'redeemLocalCallback' | 'redeemLocalCheckOnRemote' | 'redeemRemote' | 'renounceOwnership' | 'retryRevert' | 'revertLookup' | 'revertRedeemLocal' | 'sendCredits' | 'setBridgeAndFactory' | 'setDeltaParam' | 'setFeeLibrary' | 'setFees' | 'setMintFeeOwner' | 'setProtocolFeeOwner' | 'setSwapStop' | 'setWeightForChainPath' | 'swap' | 'swapRemote' | 'transferOwnership' | 'withdrawMintFee' | 'withdrawProtocolFee'): FunctionFragment;
    encodeFunctionData(functionFragment: 'activateChainPath', values: [BigNumberish, BigNumberish, BigNumberish]): string;
    encodeFunctionData(functionFragment: 'addLiquidity', values: [BigNumberish, BigNumberish, string]): string;
    encodeFunctionData(functionFragment: 'bridge', values?: undefined): string;
    encodeFunctionData(functionFragment: 'cachedSwapLookup', values: [BigNumberish, BytesLike, BigNumberish]): string;
    encodeFunctionData(functionFragment: 'callDelta', values: [BigNumberish, boolean]): string;
    encodeFunctionData(functionFragment: 'clearCachedSwap', values: [BigNumberish, BytesLike, BigNumberish]): string;
    encodeFunctionData(functionFragment: 'createChainPath', values: [BigNumberish, BigNumberish, BigNumberish, BigNumberish]): string;
    encodeFunctionData(functionFragment: 'createPool', values: [BigNumberish, string, BigNumberish, BigNumberish, string, string]): string;
    encodeFunctionData(functionFragment: 'creditChainPath', values: [BigNumberish, BigNumberish, BigNumberish, Pool.CreditObjStruct]): string;
    encodeFunctionData(functionFragment: 'factory', values?: undefined): string;
    encodeFunctionData(functionFragment: 'instantRedeemLocal', values: [BigNumberish, BigNumberish, string]): string;
    encodeFunctionData(functionFragment: 'mintFeeOwner', values?: undefined): string;
    encodeFunctionData(functionFragment: 'owner', values?: undefined): string;
    encodeFunctionData(functionFragment: 'protocolFeeOwner', values?: undefined): string;
    encodeFunctionData(functionFragment: 'quoteLayerZeroFee', values: [BigNumberish, BigNumberish, BytesLike, BytesLike, IStargateRouter.LzTxObjStruct]): string;
    encodeFunctionData(functionFragment: 'redeemLocal', values: [BigNumberish, BigNumberish, BigNumberish, string, BigNumberish, BytesLike, IStargateRouter.LzTxObjStruct]): string;
    encodeFunctionData(functionFragment: 'redeemLocalCallback', values: [BigNumberish, BytesLike, BigNumberish, BigNumberish, BigNumberish, string, BigNumberish, BigNumberish]): string;
    encodeFunctionData(functionFragment: 'redeemLocalCheckOnRemote', values: [BigNumberish, BytesLike, BigNumberish, BigNumberish, BigNumberish, BigNumberish, BytesLike]): string;
    encodeFunctionData(functionFragment: 'redeemRemote', values: [
        BigNumberish,
        BigNumberish,
        BigNumberish,
        string,
        BigNumberish,
        BigNumberish,
        BytesLike,
        IStargateRouter.LzTxObjStruct
    ]): string;
    encodeFunctionData(functionFragment: 'renounceOwnership', values?: undefined): string;
    encodeFunctionData(functionFragment: 'retryRevert', values: [BigNumberish, BytesLike, BigNumberish]): string;
    encodeFunctionData(functionFragment: 'revertLookup', values: [BigNumberish, BytesLike, BigNumberish]): string;
    encodeFunctionData(functionFragment: 'revertRedeemLocal', values: [BigNumberish, BytesLike, BigNumberish, string, IStargateRouter.LzTxObjStruct]): string;
    encodeFunctionData(functionFragment: 'sendCredits', values: [BigNumberish, BigNumberish, BigNumberish, string]): string;
    encodeFunctionData(functionFragment: 'setBridgeAndFactory', values: [string, string]): string;
    encodeFunctionData(functionFragment: 'setDeltaParam', values: [BigNumberish, boolean, BigNumberish, BigNumberish, boolean, boolean]): string;
    encodeFunctionData(functionFragment: 'setFeeLibrary', values: [BigNumberish, string]): string;
    encodeFunctionData(functionFragment: 'setFees', values: [BigNumberish, BigNumberish]): string;
    encodeFunctionData(functionFragment: 'setMintFeeOwner', values: [string]): string;
    encodeFunctionData(functionFragment: 'setProtocolFeeOwner', values: [string]): string;
    encodeFunctionData(functionFragment: 'setSwapStop', values: [BigNumberish, boolean]): string;
    encodeFunctionData(functionFragment: 'setWeightForChainPath', values: [BigNumberish, BigNumberish, BigNumberish, BigNumberish]): string;
    encodeFunctionData(functionFragment: 'swap', values: [
        BigNumberish,
        BigNumberish,
        BigNumberish,
        string,
        BigNumberish,
        BigNumberish,
        IStargateRouter.LzTxObjStruct,
        BytesLike,
        BytesLike
    ]): string;
    encodeFunctionData(functionFragment: 'swapRemote', values: [
        BigNumberish,
        BytesLike,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        BigNumberish,
        string,
        Pool.SwapObjStruct,
        BytesLike
    ]): string;
    encodeFunctionData(functionFragment: 'transferOwnership', values: [string]): string;
    encodeFunctionData(functionFragment: 'withdrawMintFee', values: [BigNumberish, string]): string;
    encodeFunctionData(functionFragment: 'withdrawProtocolFee', values: [BigNumberish, string]): string;
    decodeFunctionResult(functionFragment: 'activateChainPath', data: BytesLike): Result;
    decodeFunctionResult(functionFragment: 'addLiquidity', data: BytesLike): Result;
    decodeFunctionResult(functionFragment: 'bridge', data: BytesLike): Result;
    decodeFunctionResult(functionFragment: 'cachedSwapLookup', data: BytesLike): Result;
    decodeFunctionResult(functionFragment: 'callDelta', data: BytesLike): Result;
    decodeFunctionResult(functionFragment: 'clearCachedSwap', data: BytesLike): Result;
    decodeFunctionResult(functionFragment: 'createChainPath', data: BytesLike): Result;
    decodeFunctionResult(functionFragment: 'createPool', data: BytesLike): Result;
    decodeFunctionResult(functionFragment: 'creditChainPath', data: BytesLike): Result;
    decodeFunctionResult(functionFragment: 'factory', data: BytesLike): Result;
    decodeFunctionResult(functionFragment: 'instantRedeemLocal', data: BytesLike): Result;
    decodeFunctionResult(functionFragment: 'mintFeeOwner', data: BytesLike): Result;
    decodeFunctionResult(functionFragment: 'owner', data: BytesLike): Result;
    decodeFunctionResult(functionFragment: 'protocolFeeOwner', data: BytesLike): Result;
    decodeFunctionResult(functionFragment: 'quoteLayerZeroFee', data: BytesLike): Result;
    decodeFunctionResult(functionFragment: 'redeemLocal', data: BytesLike): Result;
    decodeFunctionResult(functionFragment: 'redeemLocalCallback', data: BytesLike): Result;
    decodeFunctionResult(functionFragment: 'redeemLocalCheckOnRemote', data: BytesLike): Result;
    decodeFunctionResult(functionFragment: 'redeemRemote', data: BytesLike): Result;
    decodeFunctionResult(functionFragment: 'renounceOwnership', data: BytesLike): Result;
    decodeFunctionResult(functionFragment: 'retryRevert', data: BytesLike): Result;
    decodeFunctionResult(functionFragment: 'revertLookup', data: BytesLike): Result;
    decodeFunctionResult(functionFragment: 'revertRedeemLocal', data: BytesLike): Result;
    decodeFunctionResult(functionFragment: 'sendCredits', data: BytesLike): Result;
    decodeFunctionResult(functionFragment: 'setBridgeAndFactory', data: BytesLike): Result;
    decodeFunctionResult(functionFragment: 'setDeltaParam', data: BytesLike): Result;
    decodeFunctionResult(functionFragment: 'setFeeLibrary', data: BytesLike): Result;
    decodeFunctionResult(functionFragment: 'setFees', data: BytesLike): Result;
    decodeFunctionResult(functionFragment: 'setMintFeeOwner', data: BytesLike): Result;
    decodeFunctionResult(functionFragment: 'setProtocolFeeOwner', data: BytesLike): Result;
    decodeFunctionResult(functionFragment: 'setSwapStop', data: BytesLike): Result;
    decodeFunctionResult(functionFragment: 'setWeightForChainPath', data: BytesLike): Result;
    decodeFunctionResult(functionFragment: 'swap', data: BytesLike): Result;
    decodeFunctionResult(functionFragment: 'swapRemote', data: BytesLike): Result;
    decodeFunctionResult(functionFragment: 'transferOwnership', data: BytesLike): Result;
    decodeFunctionResult(functionFragment: 'withdrawMintFee', data: BytesLike): Result;
    decodeFunctionResult(functionFragment: 'withdrawProtocolFee', data: BytesLike): Result;
    events: {
        'CachedSwapSaved(uint16,bytes,uint256,address,uint256,address,bytes,bytes)': EventFragment;
        'OwnershipTransferred(address,address)': EventFragment;
        'RedeemLocalCallback(uint16,bytes,uint256,uint256,uint256,address,uint256,uint256)': EventFragment;
        'Revert(uint8,uint16,bytes,uint256)': EventFragment;
        'RevertRedeemLocal(uint16,uint256,uint256,bytes,uint256,uint256,uint256,bytes)': EventFragment;
    };
    getEvent(nameOrSignatureOrTopic: 'CachedSwapSaved'): EventFragment;
    getEvent(nameOrSignatureOrTopic: 'OwnershipTransferred'): EventFragment;
    getEvent(nameOrSignatureOrTopic: 'RedeemLocalCallback'): EventFragment;
    getEvent(nameOrSignatureOrTopic: 'Revert'): EventFragment;
    getEvent(nameOrSignatureOrTopic: 'RevertRedeemLocal'): EventFragment;
}
export interface CachedSwapSavedEventObject {
    chainId: number;
    srcAddress: string;
    nonce: BigNumber;
    token: string;
    amountLD: BigNumber;
    to: string;
    payload: string;
    reason: string;
}
export type CachedSwapSavedEvent = TypedEvent<[
    number,
    string,
    BigNumber,
    string,
    BigNumber,
    string,
    string,
    string
], CachedSwapSavedEventObject>;
export type CachedSwapSavedEventFilter = TypedEventFilter<CachedSwapSavedEvent>;
export interface OwnershipTransferredEventObject {
    previousOwner: string;
    newOwner: string;
}
export type OwnershipTransferredEvent = TypedEvent<[string, string], OwnershipTransferredEventObject>;
export type OwnershipTransferredEventFilter = TypedEventFilter<OwnershipTransferredEvent>;
export interface RedeemLocalCallbackEventObject {
    srcChainId: number;
    srcAddress: string;
    nonce: BigNumber;
    srcPoolId: BigNumber;
    dstPoolId: BigNumber;
    to: string;
    amountSD: BigNumber;
    mintAmountSD: BigNumber;
}
export type RedeemLocalCallbackEvent = TypedEvent<[
    number,
    string,
    BigNumber,
    BigNumber,
    BigNumber,
    string,
    BigNumber,
    BigNumber
], RedeemLocalCallbackEventObject>;
export type RedeemLocalCallbackEventFilter = TypedEventFilter<RedeemLocalCallbackEvent>;
export interface RevertEventObject {
    bridgeFunctionType: number;
    chainId: number;
    srcAddress: string;
    nonce: BigNumber;
}
export type RevertEvent = TypedEvent<[number, number, string, BigNumber], RevertEventObject>;
export type RevertEventFilter = TypedEventFilter<RevertEvent>;
export interface RevertRedeemLocalEventObject {
    srcChainId: number;
    _srcPoolId: BigNumber;
    _dstPoolId: BigNumber;
    to: string;
    redeemAmountSD: BigNumber;
    mintAmountSD: BigNumber;
    nonce: BigNumber;
    srcAddress: string;
}
export type RevertRedeemLocalEvent = TypedEvent<[
    number,
    BigNumber,
    BigNumber,
    string,
    BigNumber,
    BigNumber,
    BigNumber,
    string
], RevertRedeemLocalEventObject>;
export type RevertRedeemLocalEventFilter = TypedEventFilter<RevertRedeemLocalEvent>;
export interface Router extends BaseContract {
    connect(signerOrProvider: Signer | Provider | string): this;
    attach(addressOrName: string): this;
    deployed(): Promise<this>;
    interface: RouterInterface;
    queryFilter<TEvent extends TypedEvent>(event: TypedEventFilter<TEvent>, fromBlockOrBlockhash?: string | number | undefined, toBlock?: string | number | undefined): Promise<Array<TEvent>>;
    listeners<TEvent extends TypedEvent>(eventFilter?: TypedEventFilter<TEvent>): Array<TypedListener<TEvent>>;
    listeners(eventName?: string): Array<Listener>;
    removeAllListeners<TEvent extends TypedEvent>(eventFilter: TypedEventFilter<TEvent>): this;
    removeAllListeners(eventName?: string): this;
    off: OnEvent<this>;
    on: OnEvent<this>;
    once: OnEvent<this>;
    removeListener: OnEvent<this>;
    functions: {
        activateChainPath(_poolId: BigNumberish, _dstChainId: BigNumberish, _dstPoolId: BigNumberish, overrides?: Overrides & {
            from?: string;
        }): Promise<ContractTransaction>;
        addLiquidity(_poolId: BigNumberish, _amountLD: BigNumberish, _to: string, overrides?: Overrides & {
            from?: string;
        }): Promise<ContractTransaction>;
        bridge(overrides?: CallOverrides): Promise<[string]>;
        cachedSwapLookup(arg0: BigNumberish, arg1: BytesLike, arg2: BigNumberish, overrides?: CallOverrides): Promise<[
            string,
            BigNumber,
            string,
            string
        ] & {
            token: string;
            amountLD: BigNumber;
            to: string;
            payload: string;
        }>;
        callDelta(_poolId: BigNumberish, _fullMode: boolean, overrides?: Overrides & {
            from?: string;
        }): Promise<ContractTransaction>;
        clearCachedSwap(_srcChainId: BigNumberish, _srcAddress: BytesLike, _nonce: BigNumberish, overrides?: Overrides & {
            from?: string;
        }): Promise<ContractTransaction>;
        createChainPath(_poolId: BigNumberish, _dstChainId: BigNumberish, _dstPoolId: BigNumberish, _weight: BigNumberish, overrides?: Overrides & {
            from?: string;
        }): Promise<ContractTransaction>;
        createPool(_poolId: BigNumberish, _token: string, _sharedDecimals: BigNumberish, _localDecimals: BigNumberish, _name: string, _symbol: string, overrides?: Overrides & {
            from?: string;
        }): Promise<ContractTransaction>;
        creditChainPath(_dstChainId: BigNumberish, _dstPoolId: BigNumberish, _srcPoolId: BigNumberish, _c: Pool.CreditObjStruct, overrides?: Overrides & {
            from?: string;
        }): Promise<ContractTransaction>;
        factory(overrides?: CallOverrides): Promise<[string]>;
        instantRedeemLocal(_srcPoolId: BigNumberish, _amountLP: BigNumberish, _to: string, overrides?: Overrides & {
            from?: string;
        }): Promise<ContractTransaction>;
        mintFeeOwner(overrides?: CallOverrides): Promise<[string]>;
        owner(overrides?: CallOverrides): Promise<[string]>;
        protocolFeeOwner(overrides?: CallOverrides): Promise<[string]>;
        quoteLayerZeroFee(_dstChainId: BigNumberish, _functionType: BigNumberish, _toAddress: BytesLike, _transferAndCallPayload: BytesLike, _lzTxParams: IStargateRouter.LzTxObjStruct, overrides?: CallOverrides): Promise<[BigNumber, BigNumber]>;
        redeemLocal(_dstChainId: BigNumberish, _srcPoolId: BigNumberish, _dstPoolId: BigNumberish, _refundAddress: string, _amountLP: BigNumberish, _to: BytesLike, _lzTxParams: IStargateRouter.LzTxObjStruct, overrides?: PayableOverrides & {
            from?: string;
        }): Promise<ContractTransaction>;
        redeemLocalCallback(_srcChainId: BigNumberish, _srcAddress: BytesLike, _nonce: BigNumberish, _srcPoolId: BigNumberish, _dstPoolId: BigNumberish, _to: string, _amountSD: BigNumberish, _mintAmountSD: BigNumberish, overrides?: Overrides & {
            from?: string;
        }): Promise<ContractTransaction>;
        redeemLocalCheckOnRemote(_srcChainId: BigNumberish, _srcAddress: BytesLike, _nonce: BigNumberish, _srcPoolId: BigNumberish, _dstPoolId: BigNumberish, _amountSD: BigNumberish, _to: BytesLike, overrides?: Overrides & {
            from?: string;
        }): Promise<ContractTransaction>;
        redeemRemote(_dstChainId: BigNumberish, _srcPoolId: BigNumberish, _dstPoolId: BigNumberish, _refundAddress: string, _amountLP: BigNumberish, _minAmountLD: BigNumberish, _to: BytesLike, _lzTxParams: IStargateRouter.LzTxObjStruct, overrides?: PayableOverrides & {
            from?: string;
        }): Promise<ContractTransaction>;
        renounceOwnership(overrides?: Overrides & {
            from?: string;
        }): Promise<ContractTransaction>;
        retryRevert(_srcChainId: BigNumberish, _srcAddress: BytesLike, _nonce: BigNumberish, overrides?: PayableOverrides & {
            from?: string;
        }): Promise<ContractTransaction>;
        revertLookup(arg0: BigNumberish, arg1: BytesLike, arg2: BigNumberish, overrides?: CallOverrides): Promise<[string]>;
        revertRedeemLocal(_dstChainId: BigNumberish, _srcAddress: BytesLike, _nonce: BigNumberish, _refundAddress: string, _lzTxParams: IStargateRouter.LzTxObjStruct, overrides?: PayableOverrides & {
            from?: string;
        }): Promise<ContractTransaction>;
        sendCredits(_dstChainId: BigNumberish, _srcPoolId: BigNumberish, _dstPoolId: BigNumberish, _refundAddress: string, overrides?: PayableOverrides & {
            from?: string;
        }): Promise<ContractTransaction>;
        setBridgeAndFactory(_bridge: string, _factory: string, overrides?: Overrides & {
            from?: string;
        }): Promise<ContractTransaction>;
        setDeltaParam(_poolId: BigNumberish, _batched: boolean, _swapDeltaBP: BigNumberish, _lpDeltaBP: BigNumberish, _defaultSwapMode: boolean, _defaultLPMode: boolean, overrides?: Overrides & {
            from?: string;
        }): Promise<ContractTransaction>;
        setFeeLibrary(_poolId: BigNumberish, _feeLibraryAddr: string, overrides?: Overrides & {
            from?: string;
        }): Promise<ContractTransaction>;
        setFees(_poolId: BigNumberish, _mintFeeBP: BigNumberish, overrides?: Overrides & {
            from?: string;
        }): Promise<ContractTransaction>;
        setMintFeeOwner(_owner: string, overrides?: Overrides & {
            from?: string;
        }): Promise<ContractTransaction>;
        setProtocolFeeOwner(_owner: string, overrides?: Overrides & {
            from?: string;
        }): Promise<ContractTransaction>;
        setSwapStop(_poolId: BigNumberish, _swapStop: boolean, overrides?: Overrides & {
            from?: string;
        }): Promise<ContractTransaction>;
        setWeightForChainPath(_poolId: BigNumberish, _dstChainId: BigNumberish, _dstPoolId: BigNumberish, _weight: BigNumberish, overrides?: Overrides & {
            from?: string;
        }): Promise<ContractTransaction>;
        swap(_dstChainId: BigNumberish, _srcPoolId: BigNumberish, _dstPoolId: BigNumberish, _refundAddress: string, _amountLD: BigNumberish, _minAmountLD: BigNumberish, _lzTxParams: IStargateRouter.LzTxObjStruct, _to: BytesLike, _payload: BytesLike, overrides?: PayableOverrides & {
            from?: string;
        }): Promise<ContractTransaction>;
        swapRemote(_srcChainId: BigNumberish, _srcAddress: BytesLike, _nonce: BigNumberish, _srcPoolId: BigNumberish, _dstPoolId: BigNumberish, _dstGasForCall: BigNumberish, _to: string, _s: Pool.SwapObjStruct, _payload: BytesLike, overrides?: Overrides & {
            from?: string;
        }): Promise<ContractTransaction>;
        transferOwnership(newOwner: string, overrides?: Overrides & {
            from?: string;
        }): Promise<ContractTransaction>;
        withdrawMintFee(_poolId: BigNumberish, _to: string, overrides?: Overrides & {
            from?: string;
        }): Promise<ContractTransaction>;
        withdrawProtocolFee(_poolId: BigNumberish, _to: string, overrides?: Overrides & {
            from?: string;
        }): Promise<ContractTransaction>;
    };
    activateChainPath(_poolId: BigNumberish, _dstChainId: BigNumberish, _dstPoolId: BigNumberish, overrides?: Overrides & {
        from?: string;
    }): Promise<ContractTransaction>;
    addLiquidity(_poolId: BigNumberish, _amountLD: BigNumberish, _to: string, overrides?: Overrides & {
        from?: string;
    }): Promise<ContractTransaction>;
    bridge(overrides?: CallOverrides): Promise<string>;
    cachedSwapLookup(arg0: BigNumberish, arg1: BytesLike, arg2: BigNumberish, overrides?: CallOverrides): Promise<[
        string,
        BigNumber,
        string,
        string
    ] & {
        token: string;
        amountLD: BigNumber;
        to: string;
        payload: string;
    }>;
    callDelta(_poolId: BigNumberish, _fullMode: boolean, overrides?: Overrides & {
        from?: string;
    }): Promise<ContractTransaction>;
    clearCachedSwap(_srcChainId: BigNumberish, _srcAddress: BytesLike, _nonce: BigNumberish, overrides?: Overrides & {
        from?: string;
    }): Promise<ContractTransaction>;
    createChainPath(_poolId: BigNumberish, _dstChainId: BigNumberish, _dstPoolId: BigNumberish, _weight: BigNumberish, overrides?: Overrides & {
        from?: string;
    }): Promise<ContractTransaction>;
    createPool(_poolId: BigNumberish, _token: string, _sharedDecimals: BigNumberish, _localDecimals: BigNumberish, _name: string, _symbol: string, overrides?: Overrides & {
        from?: string;
    }): Promise<ContractTransaction>;
    creditChainPath(_dstChainId: BigNumberish, _dstPoolId: BigNumberish, _srcPoolId: BigNumberish, _c: Pool.CreditObjStruct, overrides?: Overrides & {
        from?: string;
    }): Promise<ContractTransaction>;
    factory(overrides?: CallOverrides): Promise<string>;
    instantRedeemLocal(_srcPoolId: BigNumberish, _amountLP: BigNumberish, _to: string, overrides?: Overrides & {
        from?: string;
    }): Promise<ContractTransaction>;
    mintFeeOwner(overrides?: CallOverrides): Promise<string>;
    owner(overrides?: CallOverrides): Promise<string>;
    protocolFeeOwner(overrides?: CallOverrides): Promise<string>;
    quoteLayerZeroFee(_dstChainId: BigNumberish, _functionType: BigNumberish, _toAddress: BytesLike, _transferAndCallPayload: BytesLike, _lzTxParams: IStargateRouter.LzTxObjStruct, overrides?: CallOverrides): Promise<[BigNumber, BigNumber]>;
    redeemLocal(_dstChainId: BigNumberish, _srcPoolId: BigNumberish, _dstPoolId: BigNumberish, _refundAddress: string, _amountLP: BigNumberish, _to: BytesLike, _lzTxParams: IStargateRouter.LzTxObjStruct, overrides?: PayableOverrides & {
        from?: string;
    }): Promise<ContractTransaction>;
    redeemLocalCallback(_srcChainId: BigNumberish, _srcAddress: BytesLike, _nonce: BigNumberish, _srcPoolId: BigNumberish, _dstPoolId: BigNumberish, _to: string, _amountSD: BigNumberish, _mintAmountSD: BigNumberish, overrides?: Overrides & {
        from?: string;
    }): Promise<ContractTransaction>;
    redeemLocalCheckOnRemote(_srcChainId: BigNumberish, _srcAddress: BytesLike, _nonce: BigNumberish, _srcPoolId: BigNumberish, _dstPoolId: BigNumberish, _amountSD: BigNumberish, _to: BytesLike, overrides?: Overrides & {
        from?: string;
    }): Promise<ContractTransaction>;
    redeemRemote(_dstChainId: BigNumberish, _srcPoolId: BigNumberish, _dstPoolId: BigNumberish, _refundAddress: string, _amountLP: BigNumberish, _minAmountLD: BigNumberish, _to: BytesLike, _lzTxParams: IStargateRouter.LzTxObjStruct, overrides?: PayableOverrides & {
        from?: string;
    }): Promise<ContractTransaction>;
    renounceOwnership(overrides?: Overrides & {
        from?: string;
    }): Promise<ContractTransaction>;
    retryRevert(_srcChainId: BigNumberish, _srcAddress: BytesLike, _nonce: BigNumberish, overrides?: PayableOverrides & {
        from?: string;
    }): Promise<ContractTransaction>;
    revertLookup(arg0: BigNumberish, arg1: BytesLike, arg2: BigNumberish, overrides?: CallOverrides): Promise<string>;
    revertRedeemLocal(_dstChainId: BigNumberish, _srcAddress: BytesLike, _nonce: BigNumberish, _refundAddress: string, _lzTxParams: IStargateRouter.LzTxObjStruct, overrides?: PayableOverrides & {
        from?: string;
    }): Promise<ContractTransaction>;
    sendCredits(_dstChainId: BigNumberish, _srcPoolId: BigNumberish, _dstPoolId: BigNumberish, _refundAddress: string, overrides?: PayableOverrides & {
        from?: string;
    }): Promise<ContractTransaction>;
    setBridgeAndFactory(_bridge: string, _factory: string, overrides?: Overrides & {
        from?: string;
    }): Promise<ContractTransaction>;
    setDeltaParam(_poolId: BigNumberish, _batched: boolean, _swapDeltaBP: BigNumberish, _lpDeltaBP: BigNumberish, _defaultSwapMode: boolean, _defaultLPMode: boolean, overrides?: Overrides & {
        from?: string;
    }): Promise<ContractTransaction>;
    setFeeLibrary(_poolId: BigNumberish, _feeLibraryAddr: string, overrides?: Overrides & {
        from?: string;
    }): Promise<ContractTransaction>;
    setFees(_poolId: BigNumberish, _mintFeeBP: BigNumberish, overrides?: Overrides & {
        from?: string;
    }): Promise<ContractTransaction>;
    setMintFeeOwner(_owner: string, overrides?: Overrides & {
        from?: string;
    }): Promise<ContractTransaction>;
    setProtocolFeeOwner(_owner: string, overrides?: Overrides & {
        from?: string;
    }): Promise<ContractTransaction>;
    setSwapStop(_poolId: BigNumberish, _swapStop: boolean, overrides?: Overrides & {
        from?: string;
    }): Promise<ContractTransaction>;
    setWeightForChainPath(_poolId: BigNumberish, _dstChainId: BigNumberish, _dstPoolId: BigNumberish, _weight: BigNumberish, overrides?: Overrides & {
        from?: string;
    }): Promise<ContractTransaction>;
    swap(_dstChainId: BigNumberish, _srcPoolId: BigNumberish, _dstPoolId: BigNumberish, _refundAddress: string, _amountLD: BigNumberish, _minAmountLD: BigNumberish, _lzTxParams: IStargateRouter.LzTxObjStruct, _to: BytesLike, _payload: BytesLike, overrides?: PayableOverrides & {
        from?: string;
    }): Promise<ContractTransaction>;
    swapRemote(_srcChainId: BigNumberish, _srcAddress: BytesLike, _nonce: BigNumberish, _srcPoolId: BigNumberish, _dstPoolId: BigNumberish, _dstGasForCall: BigNumberish, _to: string, _s: Pool.SwapObjStruct, _payload: BytesLike, overrides?: Overrides & {
        from?: string;
    }): Promise<ContractTransaction>;
    transferOwnership(newOwner: string, overrides?: Overrides & {
        from?: string;
    }): Promise<ContractTransaction>;
    withdrawMintFee(_poolId: BigNumberish, _to: string, overrides?: Overrides & {
        from?: string;
    }): Promise<ContractTransaction>;
    withdrawProtocolFee(_poolId: BigNumberish, _to: string, overrides?: Overrides & {
        from?: string;
    }): Promise<ContractTransaction>;
    callStatic: {
        activateChainPath(_poolId: BigNumberish, _dstChainId: BigNumberish, _dstPoolId: BigNumberish, overrides?: CallOverrides): Promise<void>;
        addLiquidity(_poolId: BigNumberish, _amountLD: BigNumberish, _to: string, overrides?: CallOverrides): Promise<void>;
        bridge(overrides?: CallOverrides): Promise<string>;
        cachedSwapLookup(arg0: BigNumberish, arg1: BytesLike, arg2: BigNumberish, overrides?: CallOverrides): Promise<[
            string,
            BigNumber,
            string,
            string
        ] & {
            token: string;
            amountLD: BigNumber;
            to: string;
            payload: string;
        }>;
        callDelta(_poolId: BigNumberish, _fullMode: boolean, overrides?: CallOverrides): Promise<void>;
        clearCachedSwap(_srcChainId: BigNumberish, _srcAddress: BytesLike, _nonce: BigNumberish, overrides?: CallOverrides): Promise<void>;
        createChainPath(_poolId: BigNumberish, _dstChainId: BigNumberish, _dstPoolId: BigNumberish, _weight: BigNumberish, overrides?: CallOverrides): Promise<void>;
        createPool(_poolId: BigNumberish, _token: string, _sharedDecimals: BigNumberish, _localDecimals: BigNumberish, _name: string, _symbol: string, overrides?: CallOverrides): Promise<string>;
        creditChainPath(_dstChainId: BigNumberish, _dstPoolId: BigNumberish, _srcPoolId: BigNumberish, _c: Pool.CreditObjStruct, overrides?: CallOverrides): Promise<void>;
        factory(overrides?: CallOverrides): Promise<string>;
        instantRedeemLocal(_srcPoolId: BigNumberish, _amountLP: BigNumberish, _to: string, overrides?: CallOverrides): Promise<BigNumber>;
        mintFeeOwner(overrides?: CallOverrides): Promise<string>;
        owner(overrides?: CallOverrides): Promise<string>;
        protocolFeeOwner(overrides?: CallOverrides): Promise<string>;
        quoteLayerZeroFee(_dstChainId: BigNumberish, _functionType: BigNumberish, _toAddress: BytesLike, _transferAndCallPayload: BytesLike, _lzTxParams: IStargateRouter.LzTxObjStruct, overrides?: CallOverrides): Promise<[BigNumber, BigNumber]>;
        redeemLocal(_dstChainId: BigNumberish, _srcPoolId: BigNumberish, _dstPoolId: BigNumberish, _refundAddress: string, _amountLP: BigNumberish, _to: BytesLike, _lzTxParams: IStargateRouter.LzTxObjStruct, overrides?: CallOverrides): Promise<void>;
        redeemLocalCallback(_srcChainId: BigNumberish, _srcAddress: BytesLike, _nonce: BigNumberish, _srcPoolId: BigNumberish, _dstPoolId: BigNumberish, _to: string, _amountSD: BigNumberish, _mintAmountSD: BigNumberish, overrides?: CallOverrides): Promise<void>;
        redeemLocalCheckOnRemote(_srcChainId: BigNumberish, _srcAddress: BytesLike, _nonce: BigNumberish, _srcPoolId: BigNumberish, _dstPoolId: BigNumberish, _amountSD: BigNumberish, _to: BytesLike, overrides?: CallOverrides): Promise<void>;
        redeemRemote(_dstChainId: BigNumberish, _srcPoolId: BigNumberish, _dstPoolId: BigNumberish, _refundAddress: string, _amountLP: BigNumberish, _minAmountLD: BigNumberish, _to: BytesLike, _lzTxParams: IStargateRouter.LzTxObjStruct, overrides?: CallOverrides): Promise<void>;
        renounceOwnership(overrides?: CallOverrides): Promise<void>;
        retryRevert(_srcChainId: BigNumberish, _srcAddress: BytesLike, _nonce: BigNumberish, overrides?: CallOverrides): Promise<void>;
        revertLookup(arg0: BigNumberish, arg1: BytesLike, arg2: BigNumberish, overrides?: CallOverrides): Promise<string>;
        revertRedeemLocal(_dstChainId: BigNumberish, _srcAddress: BytesLike, _nonce: BigNumberish, _refundAddress: string, _lzTxParams: IStargateRouter.LzTxObjStruct, overrides?: CallOverrides): Promise<void>;
        sendCredits(_dstChainId: BigNumberish, _srcPoolId: BigNumberish, _dstPoolId: BigNumberish, _refundAddress: string, overrides?: CallOverrides): Promise<void>;
        setBridgeAndFactory(_bridge: string, _factory: string, overrides?: CallOverrides): Promise<void>;
        setDeltaParam(_poolId: BigNumberish, _batched: boolean, _swapDeltaBP: BigNumberish, _lpDeltaBP: BigNumberish, _defaultSwapMode: boolean, _defaultLPMode: boolean, overrides?: CallOverrides): Promise<void>;
        setFeeLibrary(_poolId: BigNumberish, _feeLibraryAddr: string, overrides?: CallOverrides): Promise<void>;
        setFees(_poolId: BigNumberish, _mintFeeBP: BigNumberish, overrides?: CallOverrides): Promise<void>;
        setMintFeeOwner(_owner: string, overrides?: CallOverrides): Promise<void>;
        setProtocolFeeOwner(_owner: string, overrides?: CallOverrides): Promise<void>;
        setSwapStop(_poolId: BigNumberish, _swapStop: boolean, overrides?: CallOverrides): Promise<void>;
        setWeightForChainPath(_poolId: BigNumberish, _dstChainId: BigNumberish, _dstPoolId: BigNumberish, _weight: BigNumberish, overrides?: CallOverrides): Promise<void>;
        swap(_dstChainId: BigNumberish, _srcPoolId: BigNumberish, _dstPoolId: BigNumberish, _refundAddress: string, _amountLD: BigNumberish, _minAmountLD: BigNumberish, _lzTxParams: IStargateRouter.LzTxObjStruct, _to: BytesLike, _payload: BytesLike, overrides?: CallOverrides): Promise<void>;
        swapRemote(_srcChainId: BigNumberish, _srcAddress: BytesLike, _nonce: BigNumberish, _srcPoolId: BigNumberish, _dstPoolId: BigNumberish, _dstGasForCall: BigNumberish, _to: string, _s: Pool.SwapObjStruct, _payload: BytesLike, overrides?: CallOverrides): Promise<void>;
        transferOwnership(newOwner: string, overrides?: CallOverrides): Promise<void>;
        withdrawMintFee(_poolId: BigNumberish, _to: string, overrides?: CallOverrides): Promise<void>;
        withdrawProtocolFee(_poolId: BigNumberish, _to: string, overrides?: CallOverrides): Promise<void>;
    };
    filters: {
        'CachedSwapSaved(uint16,bytes,uint256,address,uint256,address,bytes,bytes)'(chainId?: null, srcAddress?: null, nonce?: null, token?: null, amountLD?: null, to?: null, payload?: null, reason?: null): CachedSwapSavedEventFilter;
        CachedSwapSaved(chainId?: null, srcAddress?: null, nonce?: null, token?: null, amountLD?: null, to?: null, payload?: null, reason?: null): CachedSwapSavedEventFilter;
        'OwnershipTransferred(address,address)'(previousOwner?: string | null, newOwner?: string | null): OwnershipTransferredEventFilter;
        OwnershipTransferred(previousOwner?: string | null, newOwner?: string | null): OwnershipTransferredEventFilter;
        'RedeemLocalCallback(uint16,bytes,uint256,uint256,uint256,address,uint256,uint256)'(srcChainId?: null, srcAddress?: BytesLike | null, nonce?: BigNumberish | null, srcPoolId?: null, dstPoolId?: null, to?: null, amountSD?: null, mintAmountSD?: null): RedeemLocalCallbackEventFilter;
        RedeemLocalCallback(srcChainId?: null, srcAddress?: BytesLike | null, nonce?: BigNumberish | null, srcPoolId?: null, dstPoolId?: null, to?: null, amountSD?: null, mintAmountSD?: null): RedeemLocalCallbackEventFilter;
        'Revert(uint8,uint16,bytes,uint256)'(bridgeFunctionType?: null, chainId?: null, srcAddress?: null, nonce?: null): RevertEventFilter;
        Revert(bridgeFunctionType?: null, chainId?: null, srcAddress?: null, nonce?: null): RevertEventFilter;
        'RevertRedeemLocal(uint16,uint256,uint256,bytes,uint256,uint256,uint256,bytes)'(srcChainId?: null, _srcPoolId?: null, _dstPoolId?: null, to?: null, redeemAmountSD?: null, mintAmountSD?: null, nonce?: BigNumberish | null, srcAddress?: BytesLike | null): RevertRedeemLocalEventFilter;
        RevertRedeemLocal(srcChainId?: null, _srcPoolId?: null, _dstPoolId?: null, to?: null, redeemAmountSD?: null, mintAmountSD?: null, nonce?: BigNumberish | null, srcAddress?: BytesLike | null): RevertRedeemLocalEventFilter;
    };
    estimateGas: {
        activateChainPath(_poolId: BigNumberish, _dstChainId: BigNumberish, _dstPoolId: BigNumberish, overrides?: Overrides & {
            from?: string;
        }): Promise<BigNumber>;
        addLiquidity(_poolId: BigNumberish, _amountLD: BigNumberish, _to: string, overrides?: Overrides & {
            from?: string;
        }): Promise<BigNumber>;
        bridge(overrides?: CallOverrides): Promise<BigNumber>;
        cachedSwapLookup(arg0: BigNumberish, arg1: BytesLike, arg2: BigNumberish, overrides?: CallOverrides): Promise<BigNumber>;
        callDelta(_poolId: BigNumberish, _fullMode: boolean, overrides?: Overrides & {
            from?: string;
        }): Promise<BigNumber>;
        clearCachedSwap(_srcChainId: BigNumberish, _srcAddress: BytesLike, _nonce: BigNumberish, overrides?: Overrides & {
            from?: string;
        }): Promise<BigNumber>;
        createChainPath(_poolId: BigNumberish, _dstChainId: BigNumberish, _dstPoolId: BigNumberish, _weight: BigNumberish, overrides?: Overrides & {
            from?: string;
        }): Promise<BigNumber>;
        createPool(_poolId: BigNumberish, _token: string, _sharedDecimals: BigNumberish, _localDecimals: BigNumberish, _name: string, _symbol: string, overrides?: Overrides & {
            from?: string;
        }): Promise<BigNumber>;
        creditChainPath(_dstChainId: BigNumberish, _dstPoolId: BigNumberish, _srcPoolId: BigNumberish, _c: Pool.CreditObjStruct, overrides?: Overrides & {
            from?: string;
        }): Promise<BigNumber>;
        factory(overrides?: CallOverrides): Promise<BigNumber>;
        instantRedeemLocal(_srcPoolId: BigNumberish, _amountLP: BigNumberish, _to: string, overrides?: Overrides & {
            from?: string;
        }): Promise<BigNumber>;
        mintFeeOwner(overrides?: CallOverrides): Promise<BigNumber>;
        owner(overrides?: CallOverrides): Promise<BigNumber>;
        protocolFeeOwner(overrides?: CallOverrides): Promise<BigNumber>;
        quoteLayerZeroFee(_dstChainId: BigNumberish, _functionType: BigNumberish, _toAddress: BytesLike, _transferAndCallPayload: BytesLike, _lzTxParams: IStargateRouter.LzTxObjStruct, overrides?: CallOverrides): Promise<BigNumber>;
        redeemLocal(_dstChainId: BigNumberish, _srcPoolId: BigNumberish, _dstPoolId: BigNumberish, _refundAddress: string, _amountLP: BigNumberish, _to: BytesLike, _lzTxParams: IStargateRouter.LzTxObjStruct, overrides?: PayableOverrides & {
            from?: string;
        }): Promise<BigNumber>;
        redeemLocalCallback(_srcChainId: BigNumberish, _srcAddress: BytesLike, _nonce: BigNumberish, _srcPoolId: BigNumberish, _dstPoolId: BigNumberish, _to: string, _amountSD: BigNumberish, _mintAmountSD: BigNumberish, overrides?: Overrides & {
            from?: string;
        }): Promise<BigNumber>;
        redeemLocalCheckOnRemote(_srcChainId: BigNumberish, _srcAddress: BytesLike, _nonce: BigNumberish, _srcPoolId: BigNumberish, _dstPoolId: BigNumberish, _amountSD: BigNumberish, _to: BytesLike, overrides?: Overrides & {
            from?: string;
        }): Promise<BigNumber>;
        redeemRemote(_dstChainId: BigNumberish, _srcPoolId: BigNumberish, _dstPoolId: BigNumberish, _refundAddress: string, _amountLP: BigNumberish, _minAmountLD: BigNumberish, _to: BytesLike, _lzTxParams: IStargateRouter.LzTxObjStruct, overrides?: PayableOverrides & {
            from?: string;
        }): Promise<BigNumber>;
        renounceOwnership(overrides?: Overrides & {
            from?: string;
        }): Promise<BigNumber>;
        retryRevert(_srcChainId: BigNumberish, _srcAddress: BytesLike, _nonce: BigNumberish, overrides?: PayableOverrides & {
            from?: string;
        }): Promise<BigNumber>;
        revertLookup(arg0: BigNumberish, arg1: BytesLike, arg2: BigNumberish, overrides?: CallOverrides): Promise<BigNumber>;
        revertRedeemLocal(_dstChainId: BigNumberish, _srcAddress: BytesLike, _nonce: BigNumberish, _refundAddress: string, _lzTxParams: IStargateRouter.LzTxObjStruct, overrides?: PayableOverrides & {
            from?: string;
        }): Promise<BigNumber>;
        sendCredits(_dstChainId: BigNumberish, _srcPoolId: BigNumberish, _dstPoolId: BigNumberish, _refundAddress: string, overrides?: PayableOverrides & {
            from?: string;
        }): Promise<BigNumber>;
        setBridgeAndFactory(_bridge: string, _factory: string, overrides?: Overrides & {
            from?: string;
        }): Promise<BigNumber>;
        setDeltaParam(_poolId: BigNumberish, _batched: boolean, _swapDeltaBP: BigNumberish, _lpDeltaBP: BigNumberish, _defaultSwapMode: boolean, _defaultLPMode: boolean, overrides?: Overrides & {
            from?: string;
        }): Promise<BigNumber>;
        setFeeLibrary(_poolId: BigNumberish, _feeLibraryAddr: string, overrides?: Overrides & {
            from?: string;
        }): Promise<BigNumber>;
        setFees(_poolId: BigNumberish, _mintFeeBP: BigNumberish, overrides?: Overrides & {
            from?: string;
        }): Promise<BigNumber>;
        setMintFeeOwner(_owner: string, overrides?: Overrides & {
            from?: string;
        }): Promise<BigNumber>;
        setProtocolFeeOwner(_owner: string, overrides?: Overrides & {
            from?: string;
        }): Promise<BigNumber>;
        setSwapStop(_poolId: BigNumberish, _swapStop: boolean, overrides?: Overrides & {
            from?: string;
        }): Promise<BigNumber>;
        setWeightForChainPath(_poolId: BigNumberish, _dstChainId: BigNumberish, _dstPoolId: BigNumberish, _weight: BigNumberish, overrides?: Overrides & {
            from?: string;
        }): Promise<BigNumber>;
        swap(_dstChainId: BigNumberish, _srcPoolId: BigNumberish, _dstPoolId: BigNumberish, _refundAddress: string, _amountLD: BigNumberish, _minAmountLD: BigNumberish, _lzTxParams: IStargateRouter.LzTxObjStruct, _to: BytesLike, _payload: BytesLike, overrides?: PayableOverrides & {
            from?: string;
        }): Promise<BigNumber>;
        swapRemote(_srcChainId: BigNumberish, _srcAddress: BytesLike, _nonce: BigNumberish, _srcPoolId: BigNumberish, _dstPoolId: BigNumberish, _dstGasForCall: BigNumberish, _to: string, _s: Pool.SwapObjStruct, _payload: BytesLike, overrides?: Overrides & {
            from?: string;
        }): Promise<BigNumber>;
        transferOwnership(newOwner: string, overrides?: Overrides & {
            from?: string;
        }): Promise<BigNumber>;
        withdrawMintFee(_poolId: BigNumberish, _to: string, overrides?: Overrides & {
            from?: string;
        }): Promise<BigNumber>;
        withdrawProtocolFee(_poolId: BigNumberish, _to: string, overrides?: Overrides & {
            from?: string;
        }): Promise<BigNumber>;
    };
    populateTransaction: {
        activateChainPath(_poolId: BigNumberish, _dstChainId: BigNumberish, _dstPoolId: BigNumberish, overrides?: Overrides & {
            from?: string;
        }): Promise<PopulatedTransaction>;
        addLiquidity(_poolId: BigNumberish, _amountLD: BigNumberish, _to: string, overrides?: Overrides & {
            from?: string;
        }): Promise<PopulatedTransaction>;
        bridge(overrides?: CallOverrides): Promise<PopulatedTransaction>;
        cachedSwapLookup(arg0: BigNumberish, arg1: BytesLike, arg2: BigNumberish, overrides?: CallOverrides): Promise<PopulatedTransaction>;
        callDelta(_poolId: BigNumberish, _fullMode: boolean, overrides?: Overrides & {
            from?: string;
        }): Promise<PopulatedTransaction>;
        clearCachedSwap(_srcChainId: BigNumberish, _srcAddress: BytesLike, _nonce: BigNumberish, overrides?: Overrides & {
            from?: string;
        }): Promise<PopulatedTransaction>;
        createChainPath(_poolId: BigNumberish, _dstChainId: BigNumberish, _dstPoolId: BigNumberish, _weight: BigNumberish, overrides?: Overrides & {
            from?: string;
        }): Promise<PopulatedTransaction>;
        createPool(_poolId: BigNumberish, _token: string, _sharedDecimals: BigNumberish, _localDecimals: BigNumberish, _name: string, _symbol: string, overrides?: Overrides & {
            from?: string;
        }): Promise<PopulatedTransaction>;
        creditChainPath(_dstChainId: BigNumberish, _dstPoolId: BigNumberish, _srcPoolId: BigNumberish, _c: Pool.CreditObjStruct, overrides?: Overrides & {
            from?: string;
        }): Promise<PopulatedTransaction>;
        factory(overrides?: CallOverrides): Promise<PopulatedTransaction>;
        instantRedeemLocal(_srcPoolId: BigNumberish, _amountLP: BigNumberish, _to: string, overrides?: Overrides & {
            from?: string;
        }): Promise<PopulatedTransaction>;
        mintFeeOwner(overrides?: CallOverrides): Promise<PopulatedTransaction>;
        owner(overrides?: CallOverrides): Promise<PopulatedTransaction>;
        protocolFeeOwner(overrides?: CallOverrides): Promise<PopulatedTransaction>;
        quoteLayerZeroFee(_dstChainId: BigNumberish, _functionType: BigNumberish, _toAddress: BytesLike, _transferAndCallPayload: BytesLike, _lzTxParams: IStargateRouter.LzTxObjStruct, overrides?: CallOverrides): Promise<PopulatedTransaction>;
        redeemLocal(_dstChainId: BigNumberish, _srcPoolId: BigNumberish, _dstPoolId: BigNumberish, _refundAddress: string, _amountLP: BigNumberish, _to: BytesLike, _lzTxParams: IStargateRouter.LzTxObjStruct, overrides?: PayableOverrides & {
            from?: string;
        }): Promise<PopulatedTransaction>;
        redeemLocalCallback(_srcChainId: BigNumberish, _srcAddress: BytesLike, _nonce: BigNumberish, _srcPoolId: BigNumberish, _dstPoolId: BigNumberish, _to: string, _amountSD: BigNumberish, _mintAmountSD: BigNumberish, overrides?: Overrides & {
            from?: string;
        }): Promise<PopulatedTransaction>;
        redeemLocalCheckOnRemote(_srcChainId: BigNumberish, _srcAddress: BytesLike, _nonce: BigNumberish, _srcPoolId: BigNumberish, _dstPoolId: BigNumberish, _amountSD: BigNumberish, _to: BytesLike, overrides?: Overrides & {
            from?: string;
        }): Promise<PopulatedTransaction>;
        redeemRemote(_dstChainId: BigNumberish, _srcPoolId: BigNumberish, _dstPoolId: BigNumberish, _refundAddress: string, _amountLP: BigNumberish, _minAmountLD: BigNumberish, _to: BytesLike, _lzTxParams: IStargateRouter.LzTxObjStruct, overrides?: PayableOverrides & {
            from?: string;
        }): Promise<PopulatedTransaction>;
        renounceOwnership(overrides?: Overrides & {
            from?: string;
        }): Promise<PopulatedTransaction>;
        retryRevert(_srcChainId: BigNumberish, _srcAddress: BytesLike, _nonce: BigNumberish, overrides?: PayableOverrides & {
            from?: string;
        }): Promise<PopulatedTransaction>;
        revertLookup(arg0: BigNumberish, arg1: BytesLike, arg2: BigNumberish, overrides?: CallOverrides): Promise<PopulatedTransaction>;
        revertRedeemLocal(_dstChainId: BigNumberish, _srcAddress: BytesLike, _nonce: BigNumberish, _refundAddress: string, _lzTxParams: IStargateRouter.LzTxObjStruct, overrides?: PayableOverrides & {
            from?: string;
        }): Promise<PopulatedTransaction>;
        sendCredits(_dstChainId: BigNumberish, _srcPoolId: BigNumberish, _dstPoolId: BigNumberish, _refundAddress: string, overrides?: PayableOverrides & {
            from?: string;
        }): Promise<PopulatedTransaction>;
        setBridgeAndFactory(_bridge: string, _factory: string, overrides?: Overrides & {
            from?: string;
        }): Promise<PopulatedTransaction>;
        setDeltaParam(_poolId: BigNumberish, _batched: boolean, _swapDeltaBP: BigNumberish, _lpDeltaBP: BigNumberish, _defaultSwapMode: boolean, _defaultLPMode: boolean, overrides?: Overrides & {
            from?: string;
        }): Promise<PopulatedTransaction>;
        setFeeLibrary(_poolId: BigNumberish, _feeLibraryAddr: string, overrides?: Overrides & {
            from?: string;
        }): Promise<PopulatedTransaction>;
        setFees(_poolId: BigNumberish, _mintFeeBP: BigNumberish, overrides?: Overrides & {
            from?: string;
        }): Promise<PopulatedTransaction>;
        setMintFeeOwner(_owner: string, overrides?: Overrides & {
            from?: string;
        }): Promise<PopulatedTransaction>;
        setProtocolFeeOwner(_owner: string, overrides?: Overrides & {
            from?: string;
        }): Promise<PopulatedTransaction>;
        setSwapStop(_poolId: BigNumberish, _swapStop: boolean, overrides?: Overrides & {
            from?: string;
        }): Promise<PopulatedTransaction>;
        setWeightForChainPath(_poolId: BigNumberish, _dstChainId: BigNumberish, _dstPoolId: BigNumberish, _weight: BigNumberish, overrides?: Overrides & {
            from?: string;
        }): Promise<PopulatedTransaction>;
        swap(_dstChainId: BigNumberish, _srcPoolId: BigNumberish, _dstPoolId: BigNumberish, _refundAddress: string, _amountLD: BigNumberish, _minAmountLD: BigNumberish, _lzTxParams: IStargateRouter.LzTxObjStruct, _to: BytesLike, _payload: BytesLike, overrides?: PayableOverrides & {
            from?: string;
        }): Promise<PopulatedTransaction>;
        swapRemote(_srcChainId: BigNumberish, _srcAddress: BytesLike, _nonce: BigNumberish, _srcPoolId: BigNumberish, _dstPoolId: BigNumberish, _dstGasForCall: BigNumberish, _to: string, _s: Pool.SwapObjStruct, _payload: BytesLike, overrides?: Overrides & {
            from?: string;
        }): Promise<PopulatedTransaction>;
        transferOwnership(newOwner: string, overrides?: Overrides & {
            from?: string;
        }): Promise<PopulatedTransaction>;
        withdrawMintFee(_poolId: BigNumberish, _to: string, overrides?: Overrides & {
            from?: string;
        }): Promise<PopulatedTransaction>;
        withdrawProtocolFee(_poolId: BigNumberish, _to: string, overrides?: Overrides & {
            from?: string;
        }): Promise<PopulatedTransaction>;
    };
}
