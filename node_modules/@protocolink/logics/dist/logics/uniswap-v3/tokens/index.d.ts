export declare const mainnetTokens: {
    USDC: import("@uniswap/sdk-core").Token;
    USDT: import("@uniswap/sdk-core").Token;
    ETH: import("@uniswap/sdk-core").Token;
    WETH: import("@uniswap/sdk-core").Token;
    WBTC: import("@uniswap/sdk-core").Token;
    wstETH: import("@uniswap/sdk-core").Token;
    DAI: import("@uniswap/sdk-core").Token;
    LINK: import("@uniswap/sdk-core").Token;
    weETH: import("@uniswap/sdk-core").Token;
    rETH: import("@uniswap/sdk-core").Token;
    AAVE: import("@uniswap/sdk-core").Token;
    cbETH: import("@uniswap/sdk-core").Token;
    RPL: import("@uniswap/sdk-core").Token;
    LDO: import("@uniswap/sdk-core").Token;
    UNI: import("@uniswap/sdk-core").Token;
    BAL: import("@uniswap/sdk-core").Token;
    LUSD: import("@uniswap/sdk-core").Token;
    CRV: import("@uniswap/sdk-core").Token;
    FRAX: import("@uniswap/sdk-core").Token;
    crvUSD: import("@uniswap/sdk-core").Token;
    EURS: import("@uniswap/sdk-core").Token;
    ARB: import("@uniswap/sdk-core").Token;
    sUSD: import("@uniswap/sdk-core").Token;
    "1INCH": import("@uniswap/sdk-core").Token;
    sDAI: import("@uniswap/sdk-core").Token;
    stETH: import("@uniswap/sdk-core").Token;
    USDe: import("@uniswap/sdk-core").Token;
    MKR: import("@uniswap/sdk-core").Token;
    PYUSD: import("@uniswap/sdk-core").Token;
    ENS: import("@uniswap/sdk-core").Token;
    SNX: import("@uniswap/sdk-core").Token;
    osETH: import("@uniswap/sdk-core").Token;
    MaticX: import("@uniswap/sdk-core").Token;
    stMATIC: import("@uniswap/sdk-core").Token;
    GHST: import("@uniswap/sdk-core").Token;
    USDA: import("@uniswap/sdk-core").Token;
    WOETH: import("@uniswap/sdk-core").Token;
    ezETH: import("@uniswap/sdk-core").Token;
    mTBILL: import("@uniswap/sdk-core").Token;
    apxETH: import("@uniswap/sdk-core").Token;
    Re7USDA: import("@uniswap/sdk-core").Token;
    rsETH: import("@uniswap/sdk-core").Token;
    GHO: import("@uniswap/sdk-core").Token;
    COMP: import("@uniswap/sdk-core").Token;
    FEI: import("@uniswap/sdk-core").Token;
    STG: import("@uniswap/sdk-core").Token;
    USDS: import("@uniswap/sdk-core").Token;
    SKY: import("@uniswap/sdk-core").Token;
    POL: import("@uniswap/sdk-core").Token;
    sETH2: import("@uniswap/sdk-core").Token;
    rETH2: import("@uniswap/sdk-core").Token;
    SWISE: import("@uniswap/sdk-core").Token;
    TRIBE: import("@uniswap/sdk-core").Token;
    FXS: import("@uniswap/sdk-core").Token;
    renBTC: import("@uniswap/sdk-core").Token;
    ETH2X_FLI: import("@uniswap/sdk-core").Token;
};
export declare const optimismTokens: {
    USDC: import("@uniswap/sdk-core").Token;
    USDT: import("@uniswap/sdk-core").Token;
    ETH: import("@uniswap/sdk-core").Token;
    WETH: import("@uniswap/sdk-core").Token;
    WBTC: import("@uniswap/sdk-core").Token;
    wstETH: import("@uniswap/sdk-core").Token;
    DAI: import("@uniswap/sdk-core").Token;
    LINK: import("@uniswap/sdk-core").Token;
    rETH: import("@uniswap/sdk-core").Token;
    AAVE: import("@uniswap/sdk-core").Token;
    LDO: import("@uniswap/sdk-core").Token;
    UNI: import("@uniswap/sdk-core").Token;
    BAL: import("@uniswap/sdk-core").Token;
    LUSD: import("@uniswap/sdk-core").Token;
    CRV: import("@uniswap/sdk-core").Token;
    FRAX: import("@uniswap/sdk-core").Token;
    crvUSD: import("@uniswap/sdk-core").Token;
    sUSD: import("@uniswap/sdk-core").Token;
    SNX: import("@uniswap/sdk-core").Token;
    "USDC.e": import("@uniswap/sdk-core").Token;
    OP: import("@uniswap/sdk-core").Token;
};
export declare const polygonTokens: {
    USDC: import("@uniswap/sdk-core").Token;
    USDT: import("@uniswap/sdk-core").Token;
    WETH: import("@uniswap/sdk-core").Token;
    WBTC: import("@uniswap/sdk-core").Token;
    wstETH: import("@uniswap/sdk-core").Token;
    DAI: import("@uniswap/sdk-core").Token;
    LINK: import("@uniswap/sdk-core").Token;
    rETH: import("@uniswap/sdk-core").Token;
    AAVE: import("@uniswap/sdk-core").Token;
    RPL: import("@uniswap/sdk-core").Token;
    LDO: import("@uniswap/sdk-core").Token;
    UNI: import("@uniswap/sdk-core").Token;
    BAL: import("@uniswap/sdk-core").Token;
    LUSD: import("@uniswap/sdk-core").Token;
    CRV: import("@uniswap/sdk-core").Token;
    FRAX: import("@uniswap/sdk-core").Token;
    crvUSD: import("@uniswap/sdk-core").Token;
    EURS: import("@uniswap/sdk-core").Token;
    "1INCH": import("@uniswap/sdk-core").Token;
    MKR: import("@uniswap/sdk-core").Token;
    SNX: import("@uniswap/sdk-core").Token;
    MaticX: import("@uniswap/sdk-core").Token;
    stMATIC: import("@uniswap/sdk-core").Token;
    GHST: import("@uniswap/sdk-core").Token;
    POL: import("@uniswap/sdk-core").Token;
    "USDC.e": import("@uniswap/sdk-core").Token;
    WPOL: import("@uniswap/sdk-core").Token;
    fxcbETH: import("@uniswap/sdk-core").Token;
};
export declare const baseTokens: {
    USDC: import("@uniswap/sdk-core").Token;
    ETH: import("@uniswap/sdk-core").Token;
    WETH: import("@uniswap/sdk-core").Token;
    wstETH: import("@uniswap/sdk-core").Token;
    DAI: import("@uniswap/sdk-core").Token;
    rETH: import("@uniswap/sdk-core").Token;
    cbETH: import("@uniswap/sdk-core").Token;
    BAL: import("@uniswap/sdk-core").Token;
    crvUSD: import("@uniswap/sdk-core").Token;
    USDbC: import("@uniswap/sdk-core").Token;
    "weETH.base": import("@uniswap/sdk-core").Token;
};
export declare const arbitrumTokens: {
    USDC: import("@uniswap/sdk-core").Token;
    USDT: import("@uniswap/sdk-core").Token;
    ETH: import("@uniswap/sdk-core").Token;
    WETH: import("@uniswap/sdk-core").Token;
    WBTC: import("@uniswap/sdk-core").Token;
    wstETH: import("@uniswap/sdk-core").Token;
    DAI: import("@uniswap/sdk-core").Token;
    LINK: import("@uniswap/sdk-core").Token;
    weETH: import("@uniswap/sdk-core").Token;
    rETH: import("@uniswap/sdk-core").Token;
    AAVE: import("@uniswap/sdk-core").Token;
    cbETH: import("@uniswap/sdk-core").Token;
    RPL: import("@uniswap/sdk-core").Token;
    LDO: import("@uniswap/sdk-core").Token;
    UNI: import("@uniswap/sdk-core").Token;
    BAL: import("@uniswap/sdk-core").Token;
    LUSD: import("@uniswap/sdk-core").Token;
    CRV: import("@uniswap/sdk-core").Token;
    FRAX: import("@uniswap/sdk-core").Token;
    crvUSD: import("@uniswap/sdk-core").Token;
    EURS: import("@uniswap/sdk-core").Token;
    ARB: import("@uniswap/sdk-core").Token;
    sUSD: import("@uniswap/sdk-core").Token;
    "USDC.e": import("@uniswap/sdk-core").Token;
    GMX: import("@uniswap/sdk-core").Token;
    "gmBTC-USD": import("@uniswap/sdk-core").Token;
    "gmETH-USD": import("@uniswap/sdk-core").Token;
};
export declare const avalancheTokens: {
    USDC: import("@uniswap/sdk-core").Token;
    BAL: import("@uniswap/sdk-core").Token;
    CRV: import("@uniswap/sdk-core").Token;
    FRAX: import("@uniswap/sdk-core").Token;
    "USDC.e": import("@uniswap/sdk-core").Token;
    GMX: import("@uniswap/sdk-core").Token;
    USDt: import("@uniswap/sdk-core").Token;
    "USDT.e": import("@uniswap/sdk-core").Token;
    "WETH.e": import("@uniswap/sdk-core").Token;
    "WBTC.e": import("@uniswap/sdk-core").Token;
    "BTC.b": import("@uniswap/sdk-core").Token;
    WAVAX: import("@uniswap/sdk-core").Token;
    AVAX: import("@uniswap/sdk-core").Token;
    sAVAX: import("@uniswap/sdk-core").Token;
    "DAI.e": import("@uniswap/sdk-core").Token;
    "LINK.e": import("@uniswap/sdk-core").Token;
    "AAVE.e": import("@uniswap/sdk-core").Token;
    "UNI.e": import("@uniswap/sdk-core").Token;
    "SNX.e": import("@uniswap/sdk-core").Token;
    "1INCH.e": import("@uniswap/sdk-core").Token;
};
