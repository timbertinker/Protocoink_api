import * as common from '@protocolink/common';
type ContractNames = 'CometRewards';
export declare enum MarketId {
    USDC = "USDC",
    USDCe = "USDC.e",
    USDbC = "USDbC",
    ETH = "ETH"
}
export interface MarketConfig {
    id: string;
    comet: common.Token;
    baseToken: common.Token;
}
export interface Config {
    chainId: number;
    contract: Record<ContractNames, string>;
    markets: MarketConfig[];
    COMP: common.Token;
}
export declare const configs: Config[];
export declare const supportedChainIds: number[], configMap: Record<number, Config>, marketMap: Record<number, Record<string, MarketConfig>>, COMPMap: Record<number, common.Token>;
export declare function getMarkets(chainId: number): MarketConfig[];
export declare function getMarket(chainId: number, id: string): MarketConfig;
export declare function getContractAddress(chainId: number, name: ContractNames): string;
export declare function COMP(chainId: number): common.Token;
export {};
