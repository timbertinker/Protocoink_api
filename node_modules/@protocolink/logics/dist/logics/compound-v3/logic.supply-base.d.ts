import * as common from '@protocolink/common';
import * as core from '@protocolink/core';
export type SupplyBaseLogicTokenList = Record<string, [common.Token, common.Token][]>;
export type SupplyBaseLogicParams = core.TokenToTokenExactInParams<{
    marketId: string;
}>;
export type SupplyBaseLogicFields = core.TokenToTokenExactInFields<{
    marketId: string;
}>;
export declare class SupplyBaseLogic extends core.Logic implements core.LogicTokenListInterface, core.LogicOracleInterface, core.LogicBuilderInterface {
    static id: string;
    static protocolId: string;
    static readonly supportedChainIds: number[];
    getTokenList(): Promise<SupplyBaseLogicTokenList>;
    quote(params: SupplyBaseLogicParams): Promise<{
        marketId: string;
        input: common.TokenAmount;
        output: common.TokenAmount;
    }>;
    build(fields: SupplyBaseLogicFields): Promise<{
        to: string;
        data: string;
        inputs: core.DataType.InputStruct[];
        wrapMode: number;
        approveTo: string;
        callback: string;
    }>;
}
