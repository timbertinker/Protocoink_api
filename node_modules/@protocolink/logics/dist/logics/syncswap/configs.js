"use strict";
var _a;
Object.defineProperty(exports, "__esModule", { value: true });
exports.getToken = exports.getContractAddress = exports.getConfig = exports.tokenMap = exports.configMap = exports.supportedChainIds = exports.configs = void 0;
const tslib_1 = require("tslib");
const common = tslib_1.__importStar(require("@protocolink/common"));
const tokens_1 = require("./tokens");
exports.configs = [
    {
        chainId: common.ChainId.zksync,
        contract: {
            PoolMaster: '0xbB05918E9B4bA9Fe2c8384d223f0844867909Ffb',
            ClassicPoolFactory: '0xf2DAd89f2788a8CD54625C60b55cD3d2D0ACa7Cb',
            StablePoolFactory: '0x5b9f21d407F35b10CbfDDca17D5D84b129356ea3',
            Router: '0x2da10A1e27bF85cEdD8FFb1AbBe97e53391C0295',
            RouteHelper: '0x5C07E74cB541c3D1875AEEE441D691DED6ebA204',
        },
        baseTokenAddresses: [tokens_1.zksyncTokens.WETH.address, tokens_1.zksyncTokens.USDC.address],
        tokens: Object.values(tokens_1.zksyncTokens),
    },
];
_a = exports.configs.reduce((accumulator, config) => {
    accumulator[0].push(config.chainId);
    accumulator[1][config.chainId] = config;
    accumulator[2][config.chainId] = {};
    for (const token of config.tokens) {
        accumulator[2][config.chainId][token.address] = token;
    }
    return accumulator;
}, [[], {}, {}]), exports.supportedChainIds = _a[0], exports.configMap = _a[1], exports.tokenMap = _a[2];
function getConfig(chainId) {
    return exports.configMap[chainId];
}
exports.getConfig = getConfig;
function getContractAddress(chainId, name) {
    return getConfig(chainId).contract[name];
}
exports.getContractAddress = getContractAddress;
function getToken(chainId, address) {
    return exports.tokenMap[chainId][address];
}
exports.getToken = getToken;
//# sourceMappingURL=configs.js.map