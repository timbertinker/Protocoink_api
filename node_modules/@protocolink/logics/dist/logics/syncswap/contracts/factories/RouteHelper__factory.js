"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.RouteHelper__factory = void 0;
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [
            {
                internalType: 'address',
                name: 'tokenA',
                type: 'address',
            },
            {
                internalType: 'address',
                name: 'tokenB',
                type: 'address',
            },
            {
                internalType: 'address[]',
                name: 'factories',
                type: 'address[]',
            },
            {
                internalType: 'address[]',
                name: 'baseTokens',
                type: 'address[]',
            },
            {
                internalType: 'address',
                name: 'master',
                type: 'address',
            },
            {
                internalType: 'address',
                name: 'account',
                type: 'address',
            },
        ],
        name: 'getRoutePools',
        outputs: [
            {
                components: [
                    {
                        components: [
                            {
                                internalType: 'address',
                                name: 'pool',
                                type: 'address',
                            },
                            {
                                internalType: 'address',
                                name: 'tokenA',
                                type: 'address',
                            },
                            {
                                internalType: 'address',
                                name: 'tokenB',
                                type: 'address',
                            },
                            {
                                internalType: 'uint16',
                                name: 'poolType',
                                type: 'uint16',
                            },
                            {
                                internalType: 'uint256',
                                name: 'reserveA',
                                type: 'uint256',
                            },
                            {
                                internalType: 'uint256',
                                name: 'reserveB',
                                type: 'uint256',
                            },
                            {
                                internalType: 'uint24',
                                name: 'swapFeeAB',
                                type: 'uint24',
                            },
                            {
                                internalType: 'uint24',
                                name: 'swapFeeBA',
                                type: 'uint24',
                            },
                        ],
                        internalType: 'struct RouteHelper.RoutePool[]',
                        name: 'poolsDirect',
                        type: 'tuple[]',
                    },
                    {
                        components: [
                            {
                                internalType: 'address',
                                name: 'pool',
                                type: 'address',
                            },
                            {
                                internalType: 'address',
                                name: 'tokenA',
                                type: 'address',
                            },
                            {
                                internalType: 'address',
                                name: 'tokenB',
                                type: 'address',
                            },
                            {
                                internalType: 'uint16',
                                name: 'poolType',
                                type: 'uint16',
                            },
                            {
                                internalType: 'uint256',
                                name: 'reserveA',
                                type: 'uint256',
                            },
                            {
                                internalType: 'uint256',
                                name: 'reserveB',
                                type: 'uint256',
                            },
                            {
                                internalType: 'uint24',
                                name: 'swapFeeAB',
                                type: 'uint24',
                            },
                            {
                                internalType: 'uint24',
                                name: 'swapFeeBA',
                                type: 'uint24',
                            },
                        ],
                        internalType: 'struct RouteHelper.RoutePool[]',
                        name: 'poolsA',
                        type: 'tuple[]',
                    },
                    {
                        components: [
                            {
                                internalType: 'address',
                                name: 'pool',
                                type: 'address',
                            },
                            {
                                internalType: 'address',
                                name: 'tokenA',
                                type: 'address',
                            },
                            {
                                internalType: 'address',
                                name: 'tokenB',
                                type: 'address',
                            },
                            {
                                internalType: 'uint16',
                                name: 'poolType',
                                type: 'uint16',
                            },
                            {
                                internalType: 'uint256',
                                name: 'reserveA',
                                type: 'uint256',
                            },
                            {
                                internalType: 'uint256',
                                name: 'reserveB',
                                type: 'uint256',
                            },
                            {
                                internalType: 'uint24',
                                name: 'swapFeeAB',
                                type: 'uint24',
                            },
                            {
                                internalType: 'uint24',
                                name: 'swapFeeBA',
                                type: 'uint24',
                            },
                        ],
                        internalType: 'struct RouteHelper.RoutePool[]',
                        name: 'poolsB',
                        type: 'tuple[]',
                    },
                    {
                        components: [
                            {
                                internalType: 'address',
                                name: 'pool',
                                type: 'address',
                            },
                            {
                                internalType: 'address',
                                name: 'tokenA',
                                type: 'address',
                            },
                            {
                                internalType: 'address',
                                name: 'tokenB',
                                type: 'address',
                            },
                            {
                                internalType: 'uint16',
                                name: 'poolType',
                                type: 'uint16',
                            },
                            {
                                internalType: 'uint256',
                                name: 'reserveA',
                                type: 'uint256',
                            },
                            {
                                internalType: 'uint256',
                                name: 'reserveB',
                                type: 'uint256',
                            },
                            {
                                internalType: 'uint24',
                                name: 'swapFeeAB',
                                type: 'uint24',
                            },
                            {
                                internalType: 'uint24',
                                name: 'swapFeeBA',
                                type: 'uint24',
                            },
                        ],
                        internalType: 'struct RouteHelper.RoutePool[]',
                        name: 'poolsBase',
                        type: 'tuple[]',
                    },
                ],
                internalType: 'struct RouteHelper.RoutePools',
                name: 'routePools',
                type: 'tuple',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
];
class RouteHelper__factory {
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.RouteHelper__factory = RouteHelper__factory;
RouteHelper__factory.abi = _abi;
//# sourceMappingURL=RouteHelper__factory.js.map