import { Signer } from 'ethers';
import type { Provider } from '@ethersproject/providers';
import type { RouteHelper, RouteHelperInterface } from '../RouteHelper';
export declare class RouteHelper__factory {
    static readonly abi: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "tokenA";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "tokenB";
            readonly type: "address";
        }, {
            readonly internalType: "address[]";
            readonly name: "factories";
            readonly type: "address[]";
        }, {
            readonly internalType: "address[]";
            readonly name: "baseTokens";
            readonly type: "address[]";
        }, {
            readonly internalType: "address";
            readonly name: "master";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "account";
            readonly type: "address";
        }];
        readonly name: "getRoutePools";
        readonly outputs: readonly [{
            readonly components: readonly [{
                readonly components: readonly [{
                    readonly internalType: "address";
                    readonly name: "pool";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "tokenA";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "tokenB";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint16";
                    readonly name: "poolType";
                    readonly type: "uint16";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "reserveA";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "reserveB";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint24";
                    readonly name: "swapFeeAB";
                    readonly type: "uint24";
                }, {
                    readonly internalType: "uint24";
                    readonly name: "swapFeeBA";
                    readonly type: "uint24";
                }];
                readonly internalType: "struct RouteHelper.RoutePool[]";
                readonly name: "poolsDirect";
                readonly type: "tuple[]";
            }, {
                readonly components: readonly [{
                    readonly internalType: "address";
                    readonly name: "pool";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "tokenA";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "tokenB";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint16";
                    readonly name: "poolType";
                    readonly type: "uint16";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "reserveA";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "reserveB";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint24";
                    readonly name: "swapFeeAB";
                    readonly type: "uint24";
                }, {
                    readonly internalType: "uint24";
                    readonly name: "swapFeeBA";
                    readonly type: "uint24";
                }];
                readonly internalType: "struct RouteHelper.RoutePool[]";
                readonly name: "poolsA";
                readonly type: "tuple[]";
            }, {
                readonly components: readonly [{
                    readonly internalType: "address";
                    readonly name: "pool";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "tokenA";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "tokenB";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint16";
                    readonly name: "poolType";
                    readonly type: "uint16";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "reserveA";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "reserveB";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint24";
                    readonly name: "swapFeeAB";
                    readonly type: "uint24";
                }, {
                    readonly internalType: "uint24";
                    readonly name: "swapFeeBA";
                    readonly type: "uint24";
                }];
                readonly internalType: "struct RouteHelper.RoutePool[]";
                readonly name: "poolsB";
                readonly type: "tuple[]";
            }, {
                readonly components: readonly [{
                    readonly internalType: "address";
                    readonly name: "pool";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "tokenA";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "tokenB";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint16";
                    readonly name: "poolType";
                    readonly type: "uint16";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "reserveA";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "reserveB";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint24";
                    readonly name: "swapFeeAB";
                    readonly type: "uint24";
                }, {
                    readonly internalType: "uint24";
                    readonly name: "swapFeeBA";
                    readonly type: "uint24";
                }];
                readonly internalType: "struct RouteHelper.RoutePool[]";
                readonly name: "poolsBase";
                readonly type: "tuple[]";
            }];
            readonly internalType: "struct RouteHelper.RoutePools";
            readonly name: "routePools";
            readonly type: "tuple";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }];
    static createInterface(): RouteHelperInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): RouteHelper;
}
