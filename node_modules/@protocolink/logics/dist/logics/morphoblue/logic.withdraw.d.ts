import * as common from '@protocolink/common';
import * as core from '@protocolink/core';
export type WithdrawLogicTokenList = Record<string, common.Token[]>;
export type WithdrawLogicFields = core.TokenOutFields<{
    marketId: string;
}>;
export type WithdrawLogicOptions = Pick<core.GlobalOptions, 'account'>;
export declare class WithdrawLogic extends core.Logic implements core.LogicTokenListInterface, core.LogicBuilderInterface {
    static id: string;
    static protocolId: string;
    static readonly supportedChainIds: number[];
    getTokenList(): Promise<WithdrawLogicTokenList>;
    build(fields: WithdrawLogicFields, options: WithdrawLogicOptions): Promise<{
        to: string;
        data: string;
        inputs: core.DataType.InputStruct[];
        wrapMode: number;
        approveTo: string;
        callback: string;
    }>;
}
