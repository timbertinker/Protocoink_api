"use strict";
var _a;
Object.defineProperty(exports, "__esModule", { value: true });
exports.getDestToken = exports.getDestChainIds = exports.getPoolByTokenAddress = exports.getPoolConfigByTokenAddress = exports.getTokenByPoolId = exports.getTokens = exports.getEndpointId = exports.getStargateChainId = exports.getMarkets = exports.poolConfigMapByToken = exports.poolConfigMapById = exports.tokensMap = exports.configMap = exports.supportedChainIds = exports.configs = exports.PoolId = exports.EndpointId = exports.StargateChainId = void 0;
const tslib_1 = require("tslib");
const common = tslib_1.__importStar(require("@protocolink/common"));
var StargateChainId;
(function (StargateChainId) {
    StargateChainId[StargateChainId["BNB"] = 102] = "BNB";
    StargateChainId[StargateChainId["POLYGON_ZKEVM"] = 158] = "POLYGON_ZKEVM";
})(StargateChainId = exports.StargateChainId || (exports.StargateChainId = {}));
var EndpointId;
(function (EndpointId) {
    EndpointId[EndpointId["OFT"] = 0] = "OFT";
    EndpointId[EndpointId["ETHEREUM"] = 30101] = "ETHEREUM";
    EndpointId[EndpointId["BNB"] = 30102] = "BNB";
    EndpointId[EndpointId["AVALANCHE"] = 30106] = "AVALANCHE";
    EndpointId[EndpointId["POLYGON"] = 30109] = "POLYGON";
    EndpointId[EndpointId["ARBITRUM"] = 30110] = "ARBITRUM";
    EndpointId[EndpointId["OPTIMISM"] = 30111] = "OPTIMISM";
    EndpointId[EndpointId["METIS"] = 30151] = "METIS";
    EndpointId[EndpointId["BASE"] = 30184] = "BASE";
    EndpointId[EndpointId["IOTA"] = 30284] = "IOTA";
})(EndpointId = exports.EndpointId || (exports.EndpointId = {}));
var PoolId;
(function (PoolId) {
    PoolId[PoolId["OFT"] = 0] = "OFT";
    PoolId[PoolId["USDC"] = 1] = "USDC";
    PoolId[PoolId["USDT"] = 2] = "USDT";
    PoolId[PoolId["ETH"] = 13] = "ETH";
    PoolId[PoolId["METIS"] = 17] = "METIS";
})(PoolId = exports.PoolId || (exports.PoolId = {}));
exports.configs = [
    // {
    //   eid: EndpointId.ETHEREUM,
    //   chainId: common.ChainId.mainnet,
    //   pools: [
    // {
    //   id: PoolId.ETH,
    //   token: common.mainnetTokens.ETH,
    //   address: '0x77b2043768d28E9C9aB44E1aBfC95944bcE57931',
    //   destinations: [
    //     { chainId: common.ChainId.optimism, endpointId: EndpointId.OPTIMISM },
    //     { chainId: common.ChainId.metis, endpointId: EndpointId.METIS },
    //     { chainId: common.ChainId.base, endpointId: EndpointId.BASE },
    //     { chainId: common.ChainId.iota, endpointId: EndpointId.IOTA },
    //     { chainId: common.ChainId.arbitrum, endpointId: EndpointId.ARBITRUM },
    //   ],
    // },
    // {
    //   id: PoolId.USDC,
    //   token: common.mainnetTokens.USDC,
    //   address: '0xc026395860Db2d07ee33e05fE50ed7bD583189C7',
    //   destinations: [
    //     { chainId: common.ChainId.optimism, endpointId: EndpointId.OPTIMISM },
    //     { chainId: common.ChainId.polygon, endpointId: EndpointId.POLYGON },
    //     { chainId: common.ChainId.base, endpointId: EndpointId.BASE },
    //     { chainId: common.ChainId.iota, endpointId: EndpointId.IOTA },
    //     { chainId: common.ChainId.arbitrum, endpointId: EndpointId.ARBITRUM },
    //     { chainId: common.ChainId.avalanche, endpointId: EndpointId.AVALANCHE },
    //   ],
    // },
    // {
    //   id: PoolId.USDT,
    //   token: common.mainnetTokens.USDT,
    //   address: '0x933597a323Eb81cAe705C5bC29985172fd5A3973',
    //   destinations: [
    //     { chainId: common.ChainId.optimism, endpointId: EndpointId.OPTIMISM },
    //     { chainId: common.ChainId.bnb, endpointId: EndpointId.BNB },
    //     { chainId: common.ChainId.polygon, endpointId: EndpointId.POLYGON },
    //     { chainId: common.ChainId.metis, endpointId: EndpointId.METIS },
    //     { chainId: common.ChainId.iota, endpointId: EndpointId.IOTA },
    //     { chainId: common.ChainId.arbitrum, endpointId: EndpointId.ARBITRUM },
    //     { chainId: common.ChainId.avalanche, endpointId: EndpointId.AVALANCHE },
    //   ],
    // },
    // {
    //   id: PoolId.METIS,
    //   token: mainnetTokens.Metis,
    //   address: '0xcDafB1b2dB43f366E48e6F614b8DCCBFeeFEEcD3',
    //   destinations: [{ chainId: common.ChainId.metis, endpointId: EndpointId.METIS }],
    // },
    //   ],
    // },
    {
        id: StargateChainId.BNB,
        eid: EndpointId.BNB,
        chainId: common.ChainId.bnb,
        pools: [
            {
                id: PoolId.OFT,
                token: common.bnbTokens.Cake,
                address: '0x86355F02119bdBC28ED6A4D5E0cA327Ca7730fFF',
                proxyOFT: '0xb274202daBA6AE180c665B4fbE59857b7c3a8091',
                destinations: [{ chainId: common.ChainId.polygonZkevm, endpointId: EndpointId.OFT }],
            },
        ],
    },
    // {
    //   eid: EndpointId.AVALANCHE,
    //   chainId: common.ChainId.avalanche,
    //   pools: [
    //     {
    //       id: PoolId.USDC,
    //       token: common.avalancheTokens.USDC,
    //       address: '0x5634c4a5FEd09819E3c46D86A965Dd9447d86e47',
    //       destinations: [
    //         { chainId: common.ChainId.mainnet, endpointId: EndpointId.ETHEREUM },
    //         { chainId: common.ChainId.optimism, endpointId: EndpointId.OPTIMISM },
    //         { chainId: common.ChainId.polygon, endpointId: EndpointId.POLYGON },
    //         { chainId: common.ChainId.base, endpointId: EndpointId.BASE },
    //         { chainId: common.ChainId.iota, endpointId: EndpointId.IOTA },
    //         { chainId: common.ChainId.arbitrum, endpointId: EndpointId.ARBITRUM },
    //       ],
    //     },
    //     {
    //       id: PoolId.USDT,
    //       token: common.avalancheTokens.USDt,
    //       address: '0x12dC9256Acc9895B076f6638D628382881e62CeE',
    //       destinations: [
    //         { chainId: common.ChainId.mainnet, endpointId: EndpointId.ETHEREUM },
    //         { chainId: common.ChainId.optimism, endpointId: EndpointId.OPTIMISM },
    //         { chainId: common.ChainId.bnb, endpointId: EndpointId.BNB },
    //         { chainId: common.ChainId.polygon, endpointId: EndpointId.POLYGON },
    //         { chainId: common.ChainId.metis, endpointId: EndpointId.METIS },
    //         { chainId: common.ChainId.iota, endpointId: EndpointId.IOTA },
    //         { chainId: common.ChainId.arbitrum, endpointId: EndpointId.ARBITRUM },
    //       ],
    //     },
    //   ],
    // },
    // {
    //   eid: EndpointId.POLYGON,
    //   chainId: common.ChainId.polygon,
    //   pools: [
    //     {
    //       id: PoolId.USDC,
    //       token: common.polygonTokens.USDC,
    //       address: '0x9Aa02D4Fae7F58b8E8f34c66E756cC734DAc7fe4',
    //       destinations: [
    //         { chainId: common.ChainId.mainnet, endpointId: EndpointId.ETHEREUM },
    //         { chainId: common.ChainId.optimism, endpointId: EndpointId.OPTIMISM },
    //         { chainId: common.ChainId.base, endpointId: EndpointId.BASE },
    //         { chainId: common.ChainId.iota, endpointId: EndpointId.IOTA },
    //         { chainId: common.ChainId.arbitrum, endpointId: EndpointId.ARBITRUM },
    //         { chainId: common.ChainId.avalanche, endpointId: EndpointId.AVALANCHE },
    //       ],
    //     },
    //     {
    //       id: PoolId.USDT,
    //       token: common.polygonTokens.USDT,
    //       address: '0xd47b03ee6d86Cf251ee7860FB2ACf9f91B9fD4d7',
    //       destinations: [
    //         { chainId: common.ChainId.mainnet, endpointId: EndpointId.ETHEREUM },
    //         { chainId: common.ChainId.optimism, endpointId: EndpointId.OPTIMISM },
    //         { chainId: common.ChainId.bnb, endpointId: EndpointId.BNB },
    //         { chainId: common.ChainId.metis, endpointId: EndpointId.METIS },
    //         { chainId: common.ChainId.iota, endpointId: EndpointId.IOTA },
    //         { chainId: common.ChainId.arbitrum, endpointId: EndpointId.ARBITRUM },
    //         { chainId: common.ChainId.avalanche, endpointId: EndpointId.AVALANCHE },
    //       ],
    //     },
    //   ],
    // },
    {
        id: StargateChainId.POLYGON_ZKEVM,
        eid: EndpointId.OFT,
        chainId: common.ChainId.polygonZkevm,
        pools: [
            {
                id: PoolId.OFT,
                token: common.polygonZkevmTokens.Cake,
                address: '0x86355F02119bdBC28ED6A4D5E0cA327Ca7730fFF',
                destinations: [{ chainId: common.ChainId.bnb, endpointId: EndpointId.OFT }],
            },
        ],
    },
    // {
    //   eid: EndpointId.ARBITRUM,
    //   chainId: common.ChainId.arbitrum,
    //   pools: [
    //     {
    //       id: PoolId.ETH,
    //       token: common.arbitrumTokens.ETH,
    //       address: '0xA45B5130f36CDcA45667738e2a258AB09f4A5f7F',
    //       destinations: [
    //         { chainId: common.ChainId.mainnet, endpointId: EndpointId.ETHEREUM },
    //         { chainId: common.ChainId.optimism, endpointId: EndpointId.OPTIMISM },
    //         { chainId: common.ChainId.metis, endpointId: EndpointId.METIS },
    //         { chainId: common.ChainId.base, endpointId: EndpointId.BASE },
    //         { chainId: common.ChainId.iota, endpointId: EndpointId.IOTA },
    //       ],
    //     },
    //     {
    //       id: PoolId.USDC,
    //       token: common.arbitrumTokens.USDC,
    //       address: '0xe8CDF27AcD73a434D661C84887215F7598e7d0d3',
    //       destinations: [
    //         { chainId: common.ChainId.mainnet, endpointId: EndpointId.ETHEREUM },
    //         { chainId: common.ChainId.optimism, endpointId: EndpointId.OPTIMISM },
    //         { chainId: common.ChainId.polygon, endpointId: EndpointId.POLYGON },
    //         { chainId: common.ChainId.base, endpointId: EndpointId.BASE },
    //         { chainId: common.ChainId.iota, endpointId: EndpointId.IOTA },
    //         { chainId: common.ChainId.avalanche, endpointId: EndpointId.AVALANCHE },
    //       ],
    //     },
    //     {
    //       id: PoolId.USDT,
    //       token: common.arbitrumTokens.USDT,
    //       address: '0xcE8CcA271Ebc0533920C83d39F417ED6A0abB7D0',
    //       destinations: [
    //         { chainId: common.ChainId.mainnet, endpointId: EndpointId.ETHEREUM },
    //         { chainId: common.ChainId.optimism, endpointId: EndpointId.OPTIMISM },
    //         { chainId: common.ChainId.bnb, endpointId: EndpointId.BNB },
    //         { chainId: common.ChainId.polygon, endpointId: EndpointId.POLYGON },
    //         { chainId: common.ChainId.metis, endpointId: EndpointId.METIS },
    //         { chainId: common.ChainId.iota, endpointId: EndpointId.IOTA },
    //         { chainId: common.ChainId.avalanche, endpointId: EndpointId.AVALANCHE },
    //       ],
    //     },
    //   ],
    // },
    // {
    //   eid: EndpointId.OPTIMISM,
    //   chainId: common.ChainId.optimism,
    //   pools: [
    //     {
    //       id: PoolId.ETH,
    //       token: common.optimismTokens.ETH,
    //       address: '0xe8CDF27AcD73a434D661C84887215F7598e7d0d3',
    //       destinations: [
    //         { chainId: common.ChainId.mainnet, endpointId: EndpointId.ETHEREUM },
    //         { chainId: common.ChainId.metis, endpointId: EndpointId.METIS },
    //         { chainId: common.ChainId.base, endpointId: EndpointId.BASE },
    //         { chainId: common.ChainId.iota, endpointId: EndpointId.IOTA },
    //         { chainId: common.ChainId.arbitrum, endpointId: EndpointId.ARBITRUM },
    //       ],
    //     },
    //     {
    //       id: PoolId.USDC,
    //       token: common.optimismTokens.USDC,
    //       address: '0xcE8CcA271Ebc0533920C83d39F417ED6A0abB7D0',
    //       destinations: [
    //         { chainId: common.ChainId.mainnet, endpointId: EndpointId.ETHEREUM },
    //         { chainId: common.ChainId.polygon, endpointId: EndpointId.POLYGON },
    //         { chainId: common.ChainId.base, endpointId: EndpointId.BASE },
    //         { chainId: common.ChainId.iota, endpointId: EndpointId.IOTA },
    //         { chainId: common.ChainId.arbitrum, endpointId: EndpointId.ARBITRUM },
    //         { chainId: common.ChainId.avalanche, endpointId: EndpointId.AVALANCHE },
    //       ],
    //     },
    //     {
    //       id: PoolId.USDT,
    //       token: common.optimismTokens.USDT,
    //       address: '0x19cFCE47eD54a88614648DC3f19A5980097007dD',
    //       destinations: [
    //         { chainId: common.ChainId.mainnet, endpointId: EndpointId.ETHEREUM },
    //         { chainId: common.ChainId.bnb, endpointId: EndpointId.BNB },
    //         { chainId: common.ChainId.polygon, endpointId: EndpointId.POLYGON },
    //         { chainId: common.ChainId.metis, endpointId: EndpointId.METIS },
    //         { chainId: common.ChainId.iota, endpointId: EndpointId.IOTA },
    //         { chainId: common.ChainId.arbitrum, endpointId: EndpointId.ARBITRUM },
    //         { chainId: common.ChainId.avalanche, endpointId: EndpointId.AVALANCHE },
    //       ],
    //     },
    //   ],
    // },
    // {
    //   eid: EndpointId.METIS,
    //   chainId: common.ChainId.metis,
    //   pools: [
    //     {
    //       id: PoolId.METIS,
    //       token: metisTokens.Metis,
    //       address: '0xD9050e7043102a0391F81462a3916326F86331F0',
    //       destinations: [{ chainId: common.ChainId.mainnet, endpointId: EndpointId.ETHEREUM }],
    //     },
    //     {
    //       id: PoolId.ETH,
    //       token: common.metisTokens.WETH,
    //       address: '0x36ed193dc7160D3858EC250e69D12B03Ca087D08',
    //       destinations: [
    //         { chainId: common.ChainId.mainnet, endpointId: EndpointId.ETHEREUM },
    //         { chainId: common.ChainId.optimism, endpointId: EndpointId.OPTIMISM },
    //         { chainId: common.ChainId.base, endpointId: EndpointId.BASE },
    //         { chainId: common.ChainId.iota, endpointId: EndpointId.IOTA },
    //         { chainId: common.ChainId.arbitrum, endpointId: EndpointId.ARBITRUM },
    //       ],
    //     },
    //     {
    //       id: PoolId.USDT,
    //       token: common.metisTokens['m.USDT'],
    //       address: '0x4dCBFC0249e8d5032F89D6461218a9D2eFff5125',
    //       destinations: [
    //         { chainId: common.ChainId.mainnet, endpointId: EndpointId.ETHEREUM },
    //         { chainId: common.ChainId.optimism, endpointId: EndpointId.OPTIMISM },
    //         { chainId: common.ChainId.bnb, endpointId: EndpointId.BNB },
    //         { chainId: common.ChainId.polygon, endpointId: EndpointId.POLYGON },
    //         { chainId: common.ChainId.iota, endpointId: EndpointId.IOTA },
    //         { chainId: common.ChainId.arbitrum, endpointId: EndpointId.ARBITRUM },
    //         { chainId: common.ChainId.avalanche, endpointId: EndpointId.AVALANCHE },
    //       ],
    //     },
    //   ],
    // },
    // {
    //   eid: EndpointId.BASE,
    //   chainId: common.ChainId.base,
    //   pools: [
    //     {
    //       id: PoolId.ETH,
    //       token: common.baseTokens.ETH,
    //       address: '0xdc181Bd607330aeeBEF6ea62e03e5e1Fb4B6F7C7',
    //       destinations: [
    //         { chainId: common.ChainId.mainnet, endpointId: EndpointId.ETHEREUM },
    //         { chainId: common.ChainId.optimism, endpointId: EndpointId.OPTIMISM },
    //         { chainId: common.ChainId.metis, endpointId: EndpointId.METIS },
    //         { chainId: common.ChainId.iota, endpointId: EndpointId.IOTA },
    //         { chainId: common.ChainId.arbitrum, endpointId: EndpointId.ARBITRUM },
    //       ],
    //     },
    //     {
    //       id: PoolId.USDC,
    //       token: common.baseTokens.USDC,
    //       address: '0x27a16dc786820B16E5c9028b75B99F6f604b5d26',
    //       destinations: [
    //         { chainId: common.ChainId.mainnet, endpointId: EndpointId.ETHEREUM },
    //         { chainId: common.ChainId.optimism, endpointId: EndpointId.OPTIMISM },
    //         { chainId: common.ChainId.polygon, endpointId: EndpointId.POLYGON },
    //         { chainId: common.ChainId.iota, endpointId: EndpointId.IOTA },
    //         { chainId: common.ChainId.arbitrum, endpointId: EndpointId.ARBITRUM },
    //         { chainId: common.ChainId.avalanche, endpointId: EndpointId.AVALANCHE },
    //       ],
    //     },
    //   ],
    // },
    // {
    //   eid: EndpointId.IOTA,
    //   chainId: common.ChainId.iota,
    //   pools: [
    //     {
    //       id: PoolId.ETH,
    //       token: common.iotaTokens.WETH,
    //       address: '0x9c2dc7377717603eB92b2655c5f2E7997a4945BD',
    //       destinations: [
    //         { chainId: common.ChainId.mainnet, endpointId: EndpointId.ETHEREUM },
    //         { chainId: common.ChainId.optimism, endpointId: EndpointId.OPTIMISM },
    //         { chainId: common.ChainId.metis, endpointId: EndpointId.METIS },
    //         { chainId: common.ChainId.base, endpointId: EndpointId.BASE },
    //         { chainId: common.ChainId.arbitrum, endpointId: EndpointId.ARBITRUM },
    //       ],
    //     },
    //     {
    //       id: PoolId.USDC,
    //       token: common.iotaTokens['USDC.e'],
    //       address: '0x8e8539e4CcD69123c623a106773F2b0cbbc58746',
    //       destinations: [
    //         { chainId: common.ChainId.mainnet, endpointId: EndpointId.ETHEREUM },
    //         { chainId: common.ChainId.optimism, endpointId: EndpointId.OPTIMISM },
    //         { chainId: common.ChainId.polygon, endpointId: EndpointId.POLYGON },
    //         { chainId: common.ChainId.arbitrum, endpointId: EndpointId.ARBITRUM },
    //         { chainId: common.ChainId.avalanche, endpointId: EndpointId.AVALANCHE },
    //       ],
    //     },
    //     {
    //       id: PoolId.USDT,
    //       token: common.iotaTokens.USDT,
    //       address: '0x77C71633C34C3784ede189d74223122422492a0f',
    //       destinations: [
    //         { chainId: common.ChainId.mainnet, endpointId: EndpointId.ETHEREUM },
    //         { chainId: common.ChainId.optimism, endpointId: EndpointId.OPTIMISM },
    //         { chainId: common.ChainId.bnb, endpointId: EndpointId.BNB },
    //         { chainId: common.ChainId.polygon, endpointId: EndpointId.POLYGON },
    //         { chainId: common.ChainId.metis, endpointId: EndpointId.METIS },
    //         { chainId: common.ChainId.arbitrum, endpointId: EndpointId.ARBITRUM },
    //         { chainId: common.ChainId.avalanche, endpointId: EndpointId.AVALANCHE },
    //       ],
    //     },
    //   ],
    // },
];
_a = exports.configs.reduce((accumulator, config) => {
    accumulator[0].push(config.chainId);
    accumulator[1][config.chainId] = config;
    accumulator[2][config.chainId] = new Set();
    accumulator[3][config.chainId] = {};
    accumulator[4][config.chainId] = {};
    for (const pool of config.pools) {
        accumulator[2][config.chainId].add(pool.token);
        accumulator[3][config.chainId][pool.id] = { chainId: config.chainId, ...pool };
        accumulator[4][config.chainId][pool.token.address] = { chainId: config.chainId, ...pool };
    }
    return accumulator;
}, [[], {}, {}, {}, {}]), exports.supportedChainIds = _a[0], exports.configMap = _a[1], exports.tokensMap = _a[2], exports.poolConfigMapById = _a[3], exports.poolConfigMapByToken = _a[4];
function getMarkets(chainId) {
    return exports.configMap[chainId].pools;
}
exports.getMarkets = getMarkets;
function getStargateChainId(chainId) {
    return exports.configMap[chainId].id;
}
exports.getStargateChainId = getStargateChainId;
function getEndpointId(chainId) {
    return exports.configMap[chainId].eid;
}
exports.getEndpointId = getEndpointId;
function getTokens(chainId) {
    return [...exports.tokensMap[chainId]];
}
exports.getTokens = getTokens;
function getTokenByPoolId(chainId, poolId) {
    return exports.poolConfigMapById[chainId][poolId].token;
}
exports.getTokenByPoolId = getTokenByPoolId;
function getPoolConfigByTokenAddress(chainId, tokenAddress) {
    return exports.poolConfigMapByToken[chainId][tokenAddress];
}
exports.getPoolConfigByTokenAddress = getPoolConfigByTokenAddress;
function getPoolByTokenAddress(chainId, tokenAddress) {
    return exports.poolConfigMapByToken[chainId][tokenAddress].address;
}
exports.getPoolByTokenAddress = getPoolByTokenAddress;
function getDestChainIds(srcChainId, srcToken) {
    var _a;
    const destChainIds = new Set();
    const srcPoolConfig = (_a = exports.poolConfigMapByToken[srcChainId][srcToken.address]) !== null && _a !== void 0 ? _a : [];
    for (const destination of srcPoolConfig.destinations) {
        destChainIds.add(destination.chainId);
    }
    return [...destChainIds];
}
exports.getDestChainIds = getDestChainIds;
function getDestToken(srcToken, destChainId) {
    var _a;
    const srcPoolConfig = (_a = exports.poolConfigMapByToken[srcToken.chainId][srcToken.address]) !== null && _a !== void 0 ? _a : [];
    return getTokenByPoolId(destChainId, srcPoolConfig.id);
}
exports.getDestToken = getDestToken;
//# sourceMappingURL=configs.js.map