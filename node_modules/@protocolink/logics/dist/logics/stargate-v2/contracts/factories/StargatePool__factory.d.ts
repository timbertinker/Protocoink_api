import { Signer } from 'ethers';
import type { Provider } from '@ethersproject/providers';
import type { StargatePool, StargatePoolInterface } from '../StargatePool';
export declare class StargatePool__factory {
    static readonly abi: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "string";
            readonly name: "_lpTokenName";
            readonly type: "string";
        }, {
            readonly internalType: "string";
            readonly name: "_lpTokenSymbol";
            readonly type: "string";
        }, {
            readonly internalType: "address";
            readonly name: "_token";
            readonly type: "address";
        }, {
            readonly internalType: "uint8";
            readonly name: "_tokenDecimals";
            readonly type: "uint8";
        }, {
            readonly internalType: "uint8";
            readonly name: "_sharedDecimals";
            readonly type: "uint8";
        }, {
            readonly internalType: "address";
            readonly name: "_endpoint";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "_owner";
            readonly type: "address";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "constructor";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidLocalDecimals";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "Path_AlreadyHasCredit";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "Path_InsufficientCredit";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "Path_UnlimitedCredit";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "amountLD";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "minAmountLD";
            readonly type: "uint256";
        }];
        readonly name: "SlippageExceeded";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "StargatePoolUSDC_BurnAmountExceedsBalance";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "Stargate_InsufficientFare";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "Stargate_InvalidAmount";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "Stargate_InvalidPath";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "Stargate_InvalidTokenDecimals";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "Stargate_LzTokenUnavailable";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "Stargate_OnlyTaxi";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "Stargate_OutflowFailed";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "Stargate_Paused";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "Stargate_RecoverTokenUnsupported";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "Stargate_ReentrantCall";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "Stargate_SlippageTooHigh";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "Stargate_Unauthorized";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "Stargate_UnreceivedTokenNotFound";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "Transfer_ApproveFailed";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "Transfer_TransferFailed";
        readonly type: "error";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "address";
                readonly name: "feeLib";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "planner";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "treasurer";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "tokenMessaging";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "creditMessaging";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "lzToken";
                readonly type: "address";
            }];
            readonly indexed: false;
            readonly internalType: "struct StargateBase.AddressConfig";
            readonly name: "config";
            readonly type: "tuple";
        }];
        readonly name: "AddressConfigSet";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "uint32";
            readonly name: "srcEid";
            readonly type: "uint32";
        }, {
            readonly components: readonly [{
                readonly internalType: "uint32";
                readonly name: "srcEid";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint64";
                readonly name: "amount";
                readonly type: "uint64";
            }];
            readonly indexed: false;
            readonly internalType: "struct Credit[]";
            readonly name: "credits";
            readonly type: "tuple[]";
        }];
        readonly name: "CreditsReceived";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "uint32";
            readonly name: "dstEid";
            readonly type: "uint32";
        }, {
            readonly components: readonly [{
                readonly internalType: "uint32";
                readonly name: "srcEid";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint64";
                readonly name: "amount";
                readonly type: "uint64";
            }];
            readonly indexed: false;
            readonly internalType: "struct Credit[]";
            readonly name: "credits";
            readonly type: "tuple[]";
        }];
        readonly name: "CreditsSent";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "payer";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "receiver";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "amountLD";
            readonly type: "uint256";
        }];
        readonly name: "Deposited";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "uint32";
            readonly name: "dstEid";
            readonly type: "uint32";
        }, {
            readonly indexed: false;
            readonly internalType: "bool";
            readonly name: "oft";
            readonly type: "bool";
        }];
        readonly name: "OFTPathSet";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "bytes32";
            readonly name: "guid";
            readonly type: "bytes32";
        }, {
            readonly indexed: false;
            readonly internalType: "uint32";
            readonly name: "srcEid";
            readonly type: "uint32";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "toAddress";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "amountReceivedLD";
            readonly type: "uint256";
        }];
        readonly name: "OFTReceived";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "bytes32";
            readonly name: "guid";
            readonly type: "bytes32";
        }, {
            readonly indexed: false;
            readonly internalType: "uint32";
            readonly name: "dstEid";
            readonly type: "uint32";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "fromAddress";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "amountSentLD";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "amountReceivedLD";
            readonly type: "uint256";
        }];
        readonly name: "OFTSent";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "previousOwner";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "newOwner";
            readonly type: "address";
        }];
        readonly name: "OwnershipTransferred";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "uint64";
            readonly name: "amountSD";
            readonly type: "uint64";
        }];
        readonly name: "Path_CreditBurned";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "bool";
            readonly name: "paused";
            readonly type: "bool";
        }];
        readonly name: "PauseSet";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }];
        readonly name: "PlannerFeeWithdrawn";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "payer";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "receiver";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "amountLD";
            readonly type: "uint256";
        }];
        readonly name: "Redeemed";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "uint64";
            readonly name: "amountSD";
            readonly type: "uint64";
        }];
        readonly name: "TreasuryFeeAdded";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "to";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint64";
            readonly name: "amountSD";
            readonly type: "uint64";
        }];
        readonly name: "TreasuryFeeWithdrawn";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "bytes32";
            readonly name: "guid";
            readonly type: "bytes32";
        }, {
            readonly indexed: false;
            readonly internalType: "uint8";
            readonly name: "index";
            readonly type: "uint8";
        }, {
            readonly indexed: false;
            readonly internalType: "uint32";
            readonly name: "srcEid";
            readonly type: "uint32";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "receiver";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "amountLD";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "bytes";
            readonly name: "composeMsg";
            readonly type: "bytes";
        }];
        readonly name: "UnreceivedTokenCached";
        readonly type: "event";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "_amountLD";
            readonly type: "uint256";
        }];
        readonly name: "addTreasuryFee";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_burnAdmin";
            readonly type: "address";
        }, {
            readonly internalType: "uint64";
            readonly name: "_burnAllowanceSD";
            readonly type: "uint64";
        }];
        readonly name: "allowBurn";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "approvalRequired";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "burnAdmin";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "burnAllowanceSD";
        readonly outputs: readonly [{
            readonly internalType: "uint64";
            readonly name: "";
            readonly type: "uint64";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "burnLockedUSDC";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "deficitOffset";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_receiver";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "_amountLD";
            readonly type: "uint256";
        }];
        readonly name: "deposit";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "amountLD";
            readonly type: "uint256";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "endpoint";
        readonly outputs: readonly [{
            readonly internalType: "contract ILayerZeroEndpointV2";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "getAddressConfig";
        readonly outputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "address";
                readonly name: "feeLib";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "planner";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "treasurer";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "tokenMessaging";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "creditMessaging";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "lzToken";
                readonly type: "address";
            }];
            readonly internalType: "struct StargateBase.AddressConfig";
            readonly name: "";
            readonly type: "tuple";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "getTransferGasLimit";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "localEid";
        readonly outputs: readonly [{
            readonly internalType: "uint32";
            readonly name: "";
            readonly type: "uint32";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "lpToken";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "oftVersion";
        readonly outputs: readonly [{
            readonly internalType: "bytes4";
            readonly name: "interfaceId";
            readonly type: "bytes4";
        }, {
            readonly internalType: "uint64";
            readonly name: "version";
            readonly type: "uint64";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "owner";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint32";
            readonly name: "eid";
            readonly type: "uint32";
        }];
        readonly name: "paths";
        readonly outputs: readonly [{
            readonly internalType: "uint64";
            readonly name: "credit";
            readonly type: "uint64";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "plannerFee";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "available";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "poolBalance";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "uint32";
                readonly name: "dstEid";
                readonly type: "uint32";
            }, {
                readonly internalType: "bytes32";
                readonly name: "to";
                readonly type: "bytes32";
            }, {
                readonly internalType: "uint256";
                readonly name: "amountLD";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "minAmountLD";
                readonly type: "uint256";
            }, {
                readonly internalType: "bytes";
                readonly name: "extraOptions";
                readonly type: "bytes";
            }, {
                readonly internalType: "bytes";
                readonly name: "composeMsg";
                readonly type: "bytes";
            }, {
                readonly internalType: "bytes";
                readonly name: "oftCmd";
                readonly type: "bytes";
            }];
            readonly internalType: "struct SendParam";
            readonly name: "_sendParam";
            readonly type: "tuple";
        }];
        readonly name: "quoteOFT";
        readonly outputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "uint256";
                readonly name: "minAmountLD";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "maxAmountLD";
                readonly type: "uint256";
            }];
            readonly internalType: "struct OFTLimit";
            readonly name: "limit";
            readonly type: "tuple";
        }, {
            readonly components: readonly [{
                readonly internalType: "int256";
                readonly name: "feeAmountLD";
                readonly type: "int256";
            }, {
                readonly internalType: "string";
                readonly name: "description";
                readonly type: "string";
            }];
            readonly internalType: "struct OFTFeeDetail[]";
            readonly name: "oftFeeDetails";
            readonly type: "tuple[]";
        }, {
            readonly components: readonly [{
                readonly internalType: "uint256";
                readonly name: "amountSentLD";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "amountReceivedLD";
                readonly type: "uint256";
            }];
            readonly internalType: "struct OFTReceipt";
            readonly name: "receipt";
            readonly type: "tuple";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "uint32";
                readonly name: "dstEid";
                readonly type: "uint32";
            }, {
                readonly internalType: "bytes32";
                readonly name: "to";
                readonly type: "bytes32";
            }, {
                readonly internalType: "uint256";
                readonly name: "amountLD";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "minAmountLD";
                readonly type: "uint256";
            }, {
                readonly internalType: "bytes";
                readonly name: "extraOptions";
                readonly type: "bytes";
            }, {
                readonly internalType: "bytes";
                readonly name: "composeMsg";
                readonly type: "bytes";
            }, {
                readonly internalType: "bytes";
                readonly name: "oftCmd";
                readonly type: "bytes";
            }];
            readonly internalType: "struct SendParam";
            readonly name: "_sendParam";
            readonly type: "tuple";
        }, {
            readonly internalType: "bool";
            readonly name: "_payInLzToken";
            readonly type: "bool";
        }];
        readonly name: "quoteRedeemSend";
        readonly outputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "uint256";
                readonly name: "nativeFee";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "lzTokenFee";
                readonly type: "uint256";
            }];
            readonly internalType: "struct MessagingFee";
            readonly name: "fee";
            readonly type: "tuple";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "uint32";
                readonly name: "dstEid";
                readonly type: "uint32";
            }, {
                readonly internalType: "bytes32";
                readonly name: "to";
                readonly type: "bytes32";
            }, {
                readonly internalType: "uint256";
                readonly name: "amountLD";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "minAmountLD";
                readonly type: "uint256";
            }, {
                readonly internalType: "bytes";
                readonly name: "extraOptions";
                readonly type: "bytes";
            }, {
                readonly internalType: "bytes";
                readonly name: "composeMsg";
                readonly type: "bytes";
            }, {
                readonly internalType: "bytes";
                readonly name: "oftCmd";
                readonly type: "bytes";
            }];
            readonly internalType: "struct SendParam";
            readonly name: "_sendParam";
            readonly type: "tuple";
        }, {
            readonly internalType: "bool";
            readonly name: "_payInLzToken";
            readonly type: "bool";
        }];
        readonly name: "quoteSend";
        readonly outputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "uint256";
                readonly name: "nativeFee";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "lzTokenFee";
                readonly type: "uint256";
            }];
            readonly internalType: "struct MessagingFee";
            readonly name: "fee";
            readonly type: "tuple";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint32";
            readonly name: "_srcEid";
            readonly type: "uint32";
        }, {
            readonly components: readonly [{
                readonly internalType: "uint32";
                readonly name: "srcEid";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint64";
                readonly name: "amount";
                readonly type: "uint64";
            }];
            readonly internalType: "struct Credit[]";
            readonly name: "_credits";
            readonly type: "tuple[]";
        }];
        readonly name: "receiveCredits";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "uint32";
                readonly name: "srcEid";
                readonly type: "uint32";
            }, {
                readonly internalType: "bytes32";
                readonly name: "sender";
                readonly type: "bytes32";
            }, {
                readonly internalType: "uint64";
                readonly name: "nonce";
                readonly type: "uint64";
            }];
            readonly internalType: "struct Origin";
            readonly name: "_origin";
            readonly type: "tuple";
        }, {
            readonly internalType: "bytes32";
            readonly name: "_guid";
            readonly type: "bytes32";
        }, {
            readonly internalType: "uint8";
            readonly name: "_seatNumber";
            readonly type: "uint8";
        }, {
            readonly internalType: "address";
            readonly name: "_receiver";
            readonly type: "address";
        }, {
            readonly internalType: "uint64";
            readonly name: "_amountSD";
            readonly type: "uint64";
        }];
        readonly name: "receiveTokenBus";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "uint32";
                readonly name: "srcEid";
                readonly type: "uint32";
            }, {
                readonly internalType: "bytes32";
                readonly name: "sender";
                readonly type: "bytes32";
            }, {
                readonly internalType: "uint64";
                readonly name: "nonce";
                readonly type: "uint64";
            }];
            readonly internalType: "struct Origin";
            readonly name: "_origin";
            readonly type: "tuple";
        }, {
            readonly internalType: "bytes32";
            readonly name: "_guid";
            readonly type: "bytes32";
        }, {
            readonly internalType: "address";
            readonly name: "_receiver";
            readonly type: "address";
        }, {
            readonly internalType: "uint64";
            readonly name: "_amountSD";
            readonly type: "uint64";
        }, {
            readonly internalType: "bytes";
            readonly name: "_composeMsg";
            readonly type: "bytes";
        }];
        readonly name: "receiveTokenTaxi";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_token";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "_to";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "_amount";
            readonly type: "uint256";
        }];
        readonly name: "recoverToken";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "_amountLD";
            readonly type: "uint256";
        }, {
            readonly internalType: "address";
            readonly name: "_receiver";
            readonly type: "address";
        }];
        readonly name: "redeem";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "amountLD";
            readonly type: "uint256";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "uint32";
                readonly name: "dstEid";
                readonly type: "uint32";
            }, {
                readonly internalType: "bytes32";
                readonly name: "to";
                readonly type: "bytes32";
            }, {
                readonly internalType: "uint256";
                readonly name: "amountLD";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "minAmountLD";
                readonly type: "uint256";
            }, {
                readonly internalType: "bytes";
                readonly name: "extraOptions";
                readonly type: "bytes";
            }, {
                readonly internalType: "bytes";
                readonly name: "composeMsg";
                readonly type: "bytes";
            }, {
                readonly internalType: "bytes";
                readonly name: "oftCmd";
                readonly type: "bytes";
            }];
            readonly internalType: "struct SendParam";
            readonly name: "_sendParam";
            readonly type: "tuple";
        }, {
            readonly components: readonly [{
                readonly internalType: "uint256";
                readonly name: "nativeFee";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "lzTokenFee";
                readonly type: "uint256";
            }];
            readonly internalType: "struct MessagingFee";
            readonly name: "_fee";
            readonly type: "tuple";
        }, {
            readonly internalType: "address";
            readonly name: "_refundAddress";
            readonly type: "address";
        }];
        readonly name: "redeemSend";
        readonly outputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "bytes32";
                readonly name: "guid";
                readonly type: "bytes32";
            }, {
                readonly internalType: "uint64";
                readonly name: "nonce";
                readonly type: "uint64";
            }, {
                readonly components: readonly [{
                    readonly internalType: "uint256";
                    readonly name: "nativeFee";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "lzTokenFee";
                    readonly type: "uint256";
                }];
                readonly internalType: "struct MessagingFee";
                readonly name: "fee";
                readonly type: "tuple";
            }];
            readonly internalType: "struct MessagingReceipt";
            readonly name: "msgReceipt";
            readonly type: "tuple";
        }, {
            readonly components: readonly [{
                readonly internalType: "uint256";
                readonly name: "amountSentLD";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "amountReceivedLD";
                readonly type: "uint256";
            }];
            readonly internalType: "struct OFTReceipt";
            readonly name: "oftReceipt";
            readonly type: "tuple";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_owner";
            readonly type: "address";
        }];
        readonly name: "redeemable";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "amountLD";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "renounceOwnership";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "_guid";
            readonly type: "bytes32";
        }, {
            readonly internalType: "uint8";
            readonly name: "_index";
            readonly type: "uint8";
        }, {
            readonly internalType: "uint32";
            readonly name: "_srcEid";
            readonly type: "uint32";
        }, {
            readonly internalType: "address";
            readonly name: "_receiver";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "_amountLD";
            readonly type: "uint256";
        }, {
            readonly internalType: "bytes";
            readonly name: "_composeMsg";
            readonly type: "bytes";
        }];
        readonly name: "retryReceiveToken";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "uint32";
                readonly name: "dstEid";
                readonly type: "uint32";
            }, {
                readonly internalType: "bytes32";
                readonly name: "to";
                readonly type: "bytes32";
            }, {
                readonly internalType: "uint256";
                readonly name: "amountLD";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "minAmountLD";
                readonly type: "uint256";
            }, {
                readonly internalType: "bytes";
                readonly name: "extraOptions";
                readonly type: "bytes";
            }, {
                readonly internalType: "bytes";
                readonly name: "composeMsg";
                readonly type: "bytes";
            }, {
                readonly internalType: "bytes";
                readonly name: "oftCmd";
                readonly type: "bytes";
            }];
            readonly internalType: "struct SendParam";
            readonly name: "_sendParam";
            readonly type: "tuple";
        }, {
            readonly components: readonly [{
                readonly internalType: "uint256";
                readonly name: "nativeFee";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "lzTokenFee";
                readonly type: "uint256";
            }];
            readonly internalType: "struct MessagingFee";
            readonly name: "_fee";
            readonly type: "tuple";
        }, {
            readonly internalType: "address";
            readonly name: "_refundAddress";
            readonly type: "address";
        }];
        readonly name: "send";
        readonly outputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "bytes32";
                readonly name: "guid";
                readonly type: "bytes32";
            }, {
                readonly internalType: "uint64";
                readonly name: "nonce";
                readonly type: "uint64";
            }, {
                readonly components: readonly [{
                    readonly internalType: "uint256";
                    readonly name: "nativeFee";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "lzTokenFee";
                    readonly type: "uint256";
                }];
                readonly internalType: "struct MessagingFee";
                readonly name: "fee";
                readonly type: "tuple";
            }];
            readonly internalType: "struct MessagingReceipt";
            readonly name: "msgReceipt";
            readonly type: "tuple";
        }, {
            readonly components: readonly [{
                readonly internalType: "uint256";
                readonly name: "amountSentLD";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "amountReceivedLD";
                readonly type: "uint256";
            }];
            readonly internalType: "struct OFTReceipt";
            readonly name: "oftReceipt";
            readonly type: "tuple";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint32";
            readonly name: "_dstEid";
            readonly type: "uint32";
        }, {
            readonly components: readonly [{
                readonly internalType: "uint32";
                readonly name: "srcEid";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint64";
                readonly name: "amount";
                readonly type: "uint64";
            }, {
                readonly internalType: "uint64";
                readonly name: "minAmount";
                readonly type: "uint64";
            }];
            readonly internalType: "struct TargetCredit[]";
            readonly name: "_credits";
            readonly type: "tuple[]";
        }];
        readonly name: "sendCredits";
        readonly outputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "uint32";
                readonly name: "srcEid";
                readonly type: "uint32";
            }, {
                readonly internalType: "uint64";
                readonly name: "amount";
                readonly type: "uint64";
            }];
            readonly internalType: "struct Credit[]";
            readonly name: "";
            readonly type: "tuple[]";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "uint32";
                readonly name: "dstEid";
                readonly type: "uint32";
            }, {
                readonly internalType: "bytes32";
                readonly name: "to";
                readonly type: "bytes32";
            }, {
                readonly internalType: "uint256";
                readonly name: "amountLD";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "minAmountLD";
                readonly type: "uint256";
            }, {
                readonly internalType: "bytes";
                readonly name: "extraOptions";
                readonly type: "bytes";
            }, {
                readonly internalType: "bytes";
                readonly name: "composeMsg";
                readonly type: "bytes";
            }, {
                readonly internalType: "bytes";
                readonly name: "oftCmd";
                readonly type: "bytes";
            }];
            readonly internalType: "struct SendParam";
            readonly name: "_sendParam";
            readonly type: "tuple";
        }, {
            readonly components: readonly [{
                readonly internalType: "uint256";
                readonly name: "nativeFee";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "lzTokenFee";
                readonly type: "uint256";
            }];
            readonly internalType: "struct MessagingFee";
            readonly name: "_fee";
            readonly type: "tuple";
        }, {
            readonly internalType: "address";
            readonly name: "_refundAddress";
            readonly type: "address";
        }];
        readonly name: "sendToken";
        readonly outputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "bytes32";
                readonly name: "guid";
                readonly type: "bytes32";
            }, {
                readonly internalType: "uint64";
                readonly name: "nonce";
                readonly type: "uint64";
            }, {
                readonly components: readonly [{
                    readonly internalType: "uint256";
                    readonly name: "nativeFee";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "lzTokenFee";
                    readonly type: "uint256";
                }];
                readonly internalType: "struct MessagingFee";
                readonly name: "fee";
                readonly type: "tuple";
            }];
            readonly internalType: "struct MessagingReceipt";
            readonly name: "msgReceipt";
            readonly type: "tuple";
        }, {
            readonly components: readonly [{
                readonly internalType: "uint256";
                readonly name: "amountSentLD";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "amountReceivedLD";
                readonly type: "uint256";
            }];
            readonly internalType: "struct OFTReceipt";
            readonly name: "oftReceipt";
            readonly type: "tuple";
        }, {
            readonly components: readonly [{
                readonly internalType: "uint72";
                readonly name: "ticketId";
                readonly type: "uint72";
            }, {
                readonly internalType: "bytes";
                readonly name: "passengerBytes";
                readonly type: "bytes";
            }];
            readonly internalType: "struct Ticket";
            readonly name: "ticket";
            readonly type: "tuple";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "address";
                readonly name: "feeLib";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "planner";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "treasurer";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "tokenMessaging";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "creditMessaging";
                readonly type: "address";
            }, {
                readonly internalType: "address";
                readonly name: "lzToken";
                readonly type: "address";
            }];
            readonly internalType: "struct StargateBase.AddressConfig";
            readonly name: "_config";
            readonly type: "tuple";
        }];
        readonly name: "setAddressConfig";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "_deficitOffsetLD";
            readonly type: "uint256";
        }];
        readonly name: "setDeficitOffset";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint32";
            readonly name: "_dstEid";
            readonly type: "uint32";
        }, {
            readonly internalType: "bool";
            readonly name: "_oft";
            readonly type: "bool";
        }];
        readonly name: "setOFTPath";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bool";
            readonly name: "_paused";
            readonly type: "bool";
        }];
        readonly name: "setPause";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "_gasLimit";
            readonly type: "uint256";
        }];
        readonly name: "setTransferGasLimit";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "sharedDecimals";
        readonly outputs: readonly [{
            readonly internalType: "uint8";
            readonly name: "";
            readonly type: "uint8";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "stargateType";
        readonly outputs: readonly [{
            readonly internalType: "enum StargateType";
            readonly name: "";
            readonly type: "uint8";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "status";
        readonly outputs: readonly [{
            readonly internalType: "uint8";
            readonly name: "";
            readonly type: "uint8";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "token";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "newOwner";
            readonly type: "address";
        }];
        readonly name: "transferOwnership";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "treasuryFee";
        readonly outputs: readonly [{
            readonly internalType: "uint64";
            readonly name: "";
            readonly type: "uint64";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "tvl";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "guid";
            readonly type: "bytes32";
        }, {
            readonly internalType: "uint8";
            readonly name: "index";
            readonly type: "uint8";
        }];
        readonly name: "unreceivedTokens";
        readonly outputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "hash";
            readonly type: "bytes32";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "withdrawPlannerFee";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_to";
            readonly type: "address";
        }, {
            readonly internalType: "uint64";
            readonly name: "_amountSD";
            readonly type: "uint64";
        }];
        readonly name: "withdrawTreasuryFee";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }];
    static createInterface(): StargatePoolInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): StargatePool;
}
