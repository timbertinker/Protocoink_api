import * as common from '@protocolink/common';
type ContractNames = 'Comptroller' | 'CompoundLens';
export interface Config {
    chainId: number;
    contract: Record<ContractNames, string>;
    COMP: common.Token;
    assets: {
        underlyingToken: common.Token;
        cTokens: common.Token[];
    }[];
}
export declare const config: Config;
export declare const supportedChainIds: number[];
export declare const COMP: common.Token;
export declare const underlyingTokens: common.Token[], tokenPairs: {
    underlyingToken: common.Token;
    cToken: common.Token;
}[], underlyingToCTokenMap: Record<string, common.Token>, cTokenToUnderlyingMap: Record<string, common.Token>;
export declare function getContractAddress(name: ContractNames): string;
export declare function toCToken(underlyingTokenOrAddress: common.TokenOrAddress): common.Token;
export {};
