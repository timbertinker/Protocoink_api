"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.PullTokenLogic = void 0;
const tslib_1 = require("tslib");
const core = tslib_1.__importStar(require("@protocolink/core"));
const utils_1 = require("../../utils");
const configs_1 = require("./configs");
class PullTokenLogic extends core.Logic {
    async getTokenList() {
        return await (0, utils_1.getUnifiedTokens)(this.chainId, { isSkipNative: true });
    }
    async build(fields, options) {
        const { input } = fields;
        const { account } = options;
        const userAgent = await this.calcAgent(account);
        const to = await this.getPermit2Address();
        const data = this.permit2Iface.encodeFunctionData('transferFrom(address,address,uint160,address)', [
            account,
            userAgent,
            input.amountWei,
            input.token.address,
        ]);
        return core.newLogic({ to, data });
    }
}
exports.PullTokenLogic = PullTokenLogic;
PullTokenLogic.id = 'pull-token';
PullTokenLogic.protocolId = 'permit2';
PullTokenLogic.supportedChainIds = configs_1.supportedChainIds;
//# sourceMappingURL=logic.pull-token.js.map