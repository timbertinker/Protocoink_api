import * as common from '@protocolink/common';
type ContractNames = 'Comptroller';
export interface Config {
    chainId: number;
    contract: Record<ContractNames, string>;
    assets: {
        underlyingToken: common.Token;
        cTokens: common.Token[];
    }[];
}
export declare const configs: Config[];
export declare const supportedChainIds: number[], configMap: Record<number, Config>, underlyingTokens: Record<number, common.Token[]>, tokenPairs: Record<number, {
    underlyingToken: common.Token;
    cToken: common.Token;
}[]>, underlyingToCTokenMap: Record<number, Record<string, common.Token>>, cTokenToUnderlyingMap: Record<number, Record<string, common.Token>>;
export declare function getContractAddress(chainId: number, name: ContractNames): string;
export declare function toCToken(chainId: number, underlyingTokenOrAddress: common.TokenOrAddress): common.Token;
export {};
