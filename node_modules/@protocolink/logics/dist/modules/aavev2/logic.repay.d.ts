import { InterestRateMode, LogicOptions, serviceType } from './types';
import * as common from '@protocolink/common';
import * as core from '@protocolink/core';
export type RepayLogicTokenList = common.Token[];
export type RepayLogicParams = core.RepayParams<{
    interestRateMode: InterestRateMode;
}>;
export type RepayLogicFields = core.RepayFields<{
    interestRateMode: InterestRateMode;
}>;
export declare class RepayLogic extends core.Logic {
    static id: string;
    readonly service: serviceType;
    constructor({ chainId, provider, service }: LogicOptions);
    getTokenList(): Promise<RepayLogicTokenList>;
    quote(params: RepayLogicParams): Promise<{
        borrower: string;
        interestRateMode: InterestRateMode;
        input: common.TokenAmount;
    }>;
    build(fields: RepayLogicFields): Promise<{
        to: string;
        data: string;
        inputs: core.DataType.InputStruct[];
        wrapMode: number;
        approveTo: string;
        callback: string;
    }>;
}
